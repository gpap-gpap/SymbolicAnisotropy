(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    326907,       7050]
NotebookOptionsPosition[    320091,       6925]
NotebookOutlinePosition[    320488,       6941]
CellTagsIndexPosition[    320445,       6938]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The Symbolic Anisotropy package", "Title",
 CellChangeTimes->{{3.9211182466860867`*^9, 
  3.921118319144319*^9}},ExpressionUUID->"ea21156d-136a-4dba-a83b-\
82b2ce7ab8dc"],

Cell["Copyright (c) 2024 Giorgos Papageorgiou - MIT license", "Subtitle",
 CellChangeTimes->{{3.921118327542041*^9, 
  3.9211183985846777`*^9}},ExpressionUUID->"5f645825-97ca-446f-910b-\
5be9fcd8ae85"],

Cell[CellGroupData[{

Cell["Loading the package from its github repo", "Section",
 CellChangeTimes->{{3.921118406754362*^9, 3.921118420679747*^9}, {
  3.921118578941792*^9, 3.9211185820510902`*^9}, {3.9216384799211197`*^9, 
  3.9216384811238537`*^9}},ExpressionUUID->"373c58a1-39bf-4376-8d8d-\
c9311f7a7c2b"],

Cell[BoxData[
 RowBox[{"<<", 
  "\"\</Users/gpapageo/Documents/projects/SymbolicAnisotropy/\
SymbolicAnisotropy.wl\>\""}]], "Input",
 CellChangeTimes->{{3.920999366069659*^9, 3.9209993823380833`*^9}, {
  3.920999423651359*^9, 3.920999429133904*^9}, {3.9211659579461527`*^9, 
  3.921165959569579*^9}, {3.92139771804707*^9, 3.9213977185995092`*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"d1537a4b-7150-422e-ab43-1a820a56bf63"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 CellChangeTimes->{{3.9216384842297497`*^9, 
  3.921638492792389*^9}},ExpressionUUID->"a619bf9b-bb6e-4898-a192-\
35784e7c09ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<SymbolicAnisotropy`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.921768593893929*^9, 
  3.921768659546157*^9}},ExpressionUUID->"9540ed05-dad3-42a6-a87d-\
f6af858d8099"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"saBondMatrix\"\>", ",", "\<\"saChristoffelMatrix\"\>", 
   ",", "\<\"saContract\"\>", ",", "\<\"saCreateElasticityTensor\"\>", 
   ",", "\<\"saGroupVelocity\"\>", ",", "\<\"saHumanReadable\"\>", 
   ",", "\<\"saPhaseVelocity\"\>", ",", "\<\"saPlaneWave\"\>", 
   ",", "\<\"saReflectionTransformation\"\>", 
   ",", "\<\"saRotationTransformation\"\>", ",", "\<\"saTensor2Voigt\"\>", 
   ",", "\<\"saTensorReplacementRule\"\>", ",", "\<\"saVariables\"\>", 
   ",", "\<\"saVoigt2Tensor\"\>", ",", "\<\"saVoigtReplacementRule\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.921768641962759*^9},
 CellLabel->
  "Out[724]=",ExpressionUUID->"e92fa8f3-66f1-44d1-84f2-09e86f858c2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{"#", ",", " ", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<?\>\"", "<>", "#"}], "]"}]}], "}"}], "]"}], "&"}], "/@", 
   
   RowBox[{"Names", "[", "\"\<SymbolicAnisotropy`*\>\"", "]"}]}], "//", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"#", ",", "\"\<\\n\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.921768751514933*^9, 3.921768769764276*^9}, {
  3.921768825321292*^9, 3.921768875535595*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"172a3316-c6f3-436f-bc8a-6ddb71a10a5b"],

Cell[BoxData[
 TemplateBox[{"\n", "\"\\n\"", 
   TagBox[
    GridBox[{{"\"saBondMatrix\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saBondMatrix[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)] creates a 6x6 Bond matrix with entries of \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    
                    RowBox[{"saBondMatrix", "[", 
                    "SymbolicAnisotropy`Private`a_", "]"}], ":=", 
                    RowBox[{"ArrayFlatten", "[", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`symbol", "=", 
                    "SymbolicAnisotropy`Private`a"}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`mat", "=", 
                    RowBox[{"Array", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`symbol", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    
                    RowBox[{"{", "SymbolicAnisotropy`Private`strageDet", 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`strangeDet", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`i_", ",", 
                    "SymbolicAnisotropy`Private`j_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`i", "+", "1"}], ",", 
                    "3"}], "]"}], ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`j", "+", "1"}], ",", 
                    "3"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`i", "+", "2"}], ",", 
                    "3"}], "]"}], ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`j", "+", "2"}], ",", 
                    "3"}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`i", "+", "2"}], ",", 
                    "3"}], "]"}], ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`j", "+", "1"}], ",", 
                    "3"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`i", "+", "1"}], ",", 
                    "3"}], "]"}], ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`j", "+", "2"}], ",", 
                    "3"}], "]"}]}], "}"}]}], "}"}]}], "}"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"0", "\[Rule]", "3"}]}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SuperscriptBox["SymbolicAnisotropy`Private`mat", "2"], 
                    ",", 
                    RowBox[{"2", " ", 
                    
                    RowBox[{"RotateLeft", "/@", 
                    "SymbolicAnisotropy`Private`mat"}], " ", 
                    
                    RowBox[{"RotateRight", "/@", 
                    "SymbolicAnisotropy`Private`mat"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"RotateLeft", "[", 
                    "SymbolicAnisotropy`Private`mat", "]"}], " ", 
                    
                    RowBox[{"RotateRight", "[", 
                    "SymbolicAnisotropy`Private`mat", "]"}]}], ",", 
                    RowBox[{"Array", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Plus", "@@", 
                    RowBox[{"Times", "@@@", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`symbol", ",", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`strangeDet", "[", 
                    "##1", "]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], 
                    "}"}]}]}], "]"}]}], "]"}]}], "]"}], "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saBondMatrix\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saBondMatrix[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)] creates a 6x6 Bond matrix with entries of \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saBondMatrix[\!\(\*StyleBox[\"head\", \"TI\"]\)] creates a 6x6 \
Bond matrix with entries of \!\(\*StyleBox[\"head\", \"TI\"]\)[i,j]", 
          "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saBondMatrix, {
            SymbolicAnisotropy`saBondMatrix[
               Pattern[SymbolicAnisotropy`Private`a, 
                Blank[]]] :> ArrayFlatten[
               
               With[{SymbolicAnisotropy`Private`symbol = 
                 SymbolicAnisotropy`Private`a}, 
                
                With[{SymbolicAnisotropy`Private`mat = 
                  Array[SymbolicAnisotropy`Private`symbol, {3, 3}]}, 
                 
                 Module[{SymbolicAnisotropy`Private`strageDet}, 
                  SymbolicAnisotropy`Private`strangeDet[
                    Pattern[SymbolicAnisotropy`Private`i, 
                    Blank[]], 
                    Pattern[SymbolicAnisotropy`Private`j, 
                    Blank[]]] := ReplaceAll[{{{
                    Mod[SymbolicAnisotropy`Private`i + 1, 3], 
                    Mod[SymbolicAnisotropy`Private`j + 1, 3]}, {
                    Mod[SymbolicAnisotropy`Private`i + 2, 3], 
                    Mod[SymbolicAnisotropy`Private`j + 2, 3]}}, {{
                    Mod[SymbolicAnisotropy`Private`i + 2, 3], 
                    Mod[SymbolicAnisotropy`Private`j + 1, 3]}, {
                    Mod[SymbolicAnisotropy`Private`i + 1, 3], 
                    Mod[SymbolicAnisotropy`Private`j + 2, 3]}}}, 0 -> 3]; {{
                    SymbolicAnisotropy`Private`mat^2, 2 
                    Map[RotateLeft, SymbolicAnisotropy`Private`mat] 
                    Map[RotateRight, SymbolicAnisotropy`Private`mat]}, {
                    RotateLeft[SymbolicAnisotropy`Private`mat] 
                    RotateRight[SymbolicAnisotropy`Private`mat], 
                    Array[Apply[Plus, 
                    MapApply[Times, 
                    Apply[SymbolicAnisotropy`Private`symbol, 
                    SymbolicAnisotropy`Private`strangeDet[
                    SlotSequence[1]], {2}]]]& , {3, 3}]}}]]]]}], "SubValues" -> 
          None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
          None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saBondMatrix"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saChristoffelMatrix\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saChristoffelMatrix[\\!\\(\\*StyleBox[\\\"tensor\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"vector\\\", \\\"TI\\\"]\\)] contracts a \
rank-4 elastic tensor with a 3-vector \\!\\(\\*StyleBox[\\\"vector\\\", \
\\\"TI\\\"]\\). \\nFor example \
Eigenvalues[saChristoffelMatrix[saCreateElasticityTensor[c, \\\"Symmetry\\\"\
\[Rule]\\\"Isotropic\\\"], {0,0,1}]-\[Rho] V^2 IdentityMatrix[3]] gives the \
equations for Vp, and Vs for an isotropic matrix\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"saChristoffelMatrix", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`c_", ",", 
                    "SymbolicAnisotropy`Private`n_"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", "SymbolicAnisotropy`Private`c",
                     "]"}], "===", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}], 
                    "&&", 
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", "SymbolicAnisotropy`Private`n",
                     "]"}], "===", 
                    RowBox[{"{", "3", "}"}]}]}]}], ":=", 
                    RowBox[{"TensorContract", "[", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`c", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`n", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`n"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "6"}], "}"}]}], "}"}]}], "]"}]}]}, {
                    " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saChristoffelMatrix\""}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saChristoffelMatrix[\\!\\(\\*StyleBox[\\\"tensor\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"vector\\\", \\\"TI\\\"]\\)] contracts a \
rank-4 elastic tensor with a 3-vector \\!\\(\\*StyleBox[\\\"vector\\\", \
\\\"TI\\\"]\\). \\nFor example \
Eigenvalues[saChristoffelMatrix[saCreateElasticityTensor[c, \\\"Symmetry\\\"\
\[Rule]\\\"Isotropic\\\"], {0,0,1}]-\[Rho] V^2 IdentityMatrix[3]] gives the \
equations for Vp, and Vs for an isotropic matrix\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saChristoffelMatrix[\!\(\*StyleBox[\"tensor\", \"TI\"]\), \
\!\(\*StyleBox[\"vector\", \"TI\"]\)] contracts a rank-4 elastic tensor with \
a 3-vector \!\(\*StyleBox[\"vector\", \"TI\"]\). \nFor example \
Eigenvalues[saChristoffelMatrix[saCreateElasticityTensor[c, \"Symmetry\"\
\[Rule]\"Isotropic\"], {0,0,1}]-\[Rho] V^2 IdentityMatrix[3]] gives the \
equations for Vp, and Vs for an isotropic matrix", "Documentation" -> None, 
          "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saChristoffelMatrix, {Condition[
               SymbolicAnisotropy`saChristoffelMatrix[
                Pattern[SymbolicAnisotropy`Private`c, 
                 Blank[]], 
                Pattern[SymbolicAnisotropy`Private`n, 
                 Blank[]]], 
               And[
               Dimensions[SymbolicAnisotropy`Private`c] === {3, 3, 3, 3}, 
                Dimensions[SymbolicAnisotropy`Private`n] === {3}]] :> 
             TensorContract[
               TensorProduct[
               SymbolicAnisotropy`Private`c, SymbolicAnisotropy`Private`n, 
                SymbolicAnisotropy`Private`n], {{2, 5}, {4, 6}}]}], 
          "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
          "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
          "FullName" -> "SymbolicAnisotropy`saChristoffelMatrix"|>, False]]}},
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saContract\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saContract[\\!\\(\\*StyleBox[\\\"symmetry\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\)] provides \
the contraction of a rank-8 symmetry tensor, with a rank-4 elastic \
tensor.\\nThis is shorthand for contracting indices when applying rotation or \
reflection transforms of the form \\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", \
StyleBox[\\\"im\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", StyleBox[\\\"jn\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", \
StyleBox[\\\"ko\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", StyleBox[\\\"lp\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"c\\\", \
StyleBox[\\\"mnop\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)\\nFor example \
saContract[saRotationTransformation[\[Theta], {1,0,0}], \
saCreateElasticityTensor[c, \\\"Symmetry\\\"\[Rule]\\\"Transverse Isotropic\\\
\"]] tilts the symmetry plane of a VTI elastic tensor by \[Theta] along the \
x-axis.\"", "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{"saContract", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`symmetry_", ",", 
                    "SymbolicAnisotropy`Private`tensor_"}], "]"}], ":=", 
                    RowBox[{"TensorContract", "[", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`symmetry", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`tensor"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "9"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "10"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "11"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "12"}], "}"}]}], "}"}]}], "]"}]}]}, {
                    " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saContract\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saContract[\\!\\(\\*StyleBox[\\\"symmetry\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\)] provides \
the contraction of a rank-8 symmetry tensor, with a rank-4 elastic \
tensor.\\nThis is shorthand for contracting indices when applying rotation or \
reflection transforms of the form \\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", \
StyleBox[\\\"im\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", StyleBox[\\\"jn\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", \
StyleBox[\\\"ko\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"R\\\", StyleBox[\\\"lp\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\)\\!\\(\\*StyleBox[SubscriptBox[\\\"c\\\", \
StyleBox[\\\"mnop\\\", \\\"TI\\\"]], \\\"TI\\\"]\\)\\nFor example \
saContract[saRotationTransformation[\[Theta], {1,0,0}], \
saCreateElasticityTensor[c, \\\"Symmetry\\\"\[Rule]\\\"Transverse Isotropic\\\
\"]] tilts the symmetry plane of a VTI elastic tensor by \[Theta] along the \
x-axis.\"", "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saContract[\!\(\*StyleBox[\"symmetry\", \"TI\"]\), \!\(\*StyleBox[\
\"tensor\", \"TI\"]\)] provides the contraction of a rank-8 symmetry tensor, \
with a rank-4 elastic tensor.\nThis is shorthand for contracting indices when \
applying rotation or reflection transforms of the form \
\!\(\*StyleBox[SubscriptBox[\"R\", StyleBox[\"im\", \"TI\"]], \
\"TI\"]\)\!\(\*StyleBox[SubscriptBox[\"R\", StyleBox[\"jn\", \"TI\"]], \
\"TI\"]\)\!\(\*StyleBox[SubscriptBox[\"R\", StyleBox[\"ko\", \"TI\"]], \
\"TI\"]\)\!\(\*StyleBox[SubscriptBox[\"R\", StyleBox[\"lp\", \"TI\"]], \
\"TI\"]\)\!\(\*StyleBox[SubscriptBox[\"c\", StyleBox[\"mnop\", \"TI\"]], \"TI\
\"]\)\nFor example saContract[saRotationTransformation[\[Theta], {1,0,0}], \
saCreateElasticityTensor[c, \"Symmetry\"\[Rule]\"Transverse Isotropic\"]] \
tilts the symmetry plane of a VTI elastic tensor by \[Theta] along the \
x-axis.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saContract, {
            SymbolicAnisotropy`saContract[
               Pattern[SymbolicAnisotropy`Private`symmetry, 
                Blank[]], 
               Pattern[SymbolicAnisotropy`Private`tensor, 
                Blank[]]] :> TensorContract[
               TensorProduct[
               SymbolicAnisotropy`Private`symmetry, 
                SymbolicAnisotropy`Private`tensor], {{2, 9}, {4, 10}, {6, 
               11}, {8, 12}}]}], "SubValues" -> None, "DefaultValues" -> None,
           "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
          "Attributes" -> {}, "FullName" -> "SymbolicAnisotropy`saContract"|>,
          False]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saCreateElasticityTensor\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saCreateElasticityTensor[\\!\\(\\*StyleBox[\\\"head\\\"\
, \\\"TI\\\"]\\)] returns a rank-4 symbolic elastic tensor with triclinic \
symmetry and 21 independent components \
\\!\\(\\*StyleBox[SubscriptBox[\\\"head\\\", StyleBox[\\\"ijkl\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\) in the form \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i, j, k, \
l].\\nsaCreateElasticityTensor[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"\\\\\\\"Symmetry\\\\\\\"\\\", \
ShowStringCharacters -> True]\\)\[Rule]\\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\\)] returns a rank-4 elastic tensor with additional symmetries as \
follows:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Symmetry\\\\\
\\\\\\\\\\\"\\\\\\\"\\\", \\\"\\\\\\\"\\\\\\\\\\\\\\\"Triclinic\\\\\\\\\\\\\\\
\"\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"Monoclinic\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"Orthotropic\\\\\\\\\\\\\\\"\\\\\\\"\\\", \\\"\\\\\
\\\"\\\\\\\\\\\\\\\"Transverse Isotropic\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"Isotropic\\\\\\\\\\\\\\\"\\\\\\\"\\\"}, {\\\"\\\\\
\\\"Independent Components\\\\\\\"\\\", \\\"\\\\\\\"21\\\\\\\"\\\", \
\\\"\\\\\\\"13\\\\\\\"\\\", \\\"\\\\\\\"9\\\\\\\"\\\", \
\\\"\\\\\\\"5\\\\\\\"\\\", \\\"\\\\\\\"2\\\\\\\"\\\"}, {\\\"\\\\\\\"Symmetry \
type\\\\\\\"\\\", \\\"\\\\\\\"None\\\\\\\"\\\", \
\\\"\\\\\\\"Reflection\\\\\\\"\\\", \\\"\\\\\\\"Reflection\\\\\\\"\\\", \
\\\"\\\\\\\"Rotation\\\\\\\"\\\", \\\"\\\\\\\"Rotation\\\\\\\"\\\"}, \
{\\\"\\\\\\\"Symmetry axis\\\\\\\"\\\", \\\"\\\\\\\"None\\\\\\\"\\\", \
\\\"\\\\\\\"{0,0,1}\\\\\\\"\\\", \\\"\\\\\\\"{0,0,1} and {1,0,0}\\\\\\\"\\\", \
\\\"\\\\\\\"{0,0,1}\\\\\\\"\\\", \\\"\\\\\\\"{0,0,1} \
and{1,0,0}\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{"saCreateElasticityTensor", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`head_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`symmetric", "[", 
                    RowBox[{"OptionValue", "[", "\"Symmetry\"", "]"}], "]"}], 
                    "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`dummy", "\[Rule]", 
                    "SymbolicAnisotropy`Private`head"}]}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Options\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Options\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"\"Symmetry\"", "\[Rule]", "\"Triclinic\""}]}, {
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saCreateElasticityTensor\""}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saCreateElasticityTensor[\\!\\(\\*StyleBox[\\\"head\\\"\
, \\\"TI\\\"]\\)] returns a rank-4 symbolic elastic tensor with triclinic \
symmetry and 21 independent components \
\\!\\(\\*StyleBox[SubscriptBox[\\\"head\\\", StyleBox[\\\"ijkl\\\", \
\\\"TI\\\"]], \\\"TI\\\"]\\) in the form \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i, j, k, \
l].\\nsaCreateElasticityTensor[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"\\\\\\\"Symmetry\\\\\\\"\\\", \
ShowStringCharacters -> True]\\)\[Rule]\\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\\)] returns a rank-4 elastic tensor with additional symmetries as \
follows:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Symmetry\\\\\
\\\\\\\\\\\"\\\\\\\"\\\", \\\"\\\\\\\"\\\\\\\\\\\\\\\"Triclinic\\\\\\\\\\\\\\\
\"\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"Monoclinic\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"Orthotropic\\\\\\\\\\\\\\\"\\\\\\\"\\\", \\\"\\\\\
\\\"\\\\\\\\\\\\\\\"Transverse Isotropic\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"Isotropic\\\\\\\\\\\\\\\"\\\\\\\"\\\"}, {\\\"\\\\\
\\\"Independent Components\\\\\\\"\\\", \\\"\\\\\\\"21\\\\\\\"\\\", \
\\\"\\\\\\\"13\\\\\\\"\\\", \\\"\\\\\\\"9\\\\\\\"\\\", \
\\\"\\\\\\\"5\\\\\\\"\\\", \\\"\\\\\\\"2\\\\\\\"\\\"}, {\\\"\\\\\\\"Symmetry \
type\\\\\\\"\\\", \\\"\\\\\\\"None\\\\\\\"\\\", \
\\\"\\\\\\\"Reflection\\\\\\\"\\\", \\\"\\\\\\\"Reflection\\\\\\\"\\\", \
\\\"\\\\\\\"Rotation\\\\\\\"\\\", \\\"\\\\\\\"Rotation\\\\\\\"\\\"}, \
{\\\"\\\\\\\"Symmetry axis\\\\\\\"\\\", \\\"\\\\\\\"None\\\\\\\"\\\", \
\\\"\\\\\\\"{0,0,1}\\\\\\\"\\\", \\\"\\\\\\\"{0,0,1} and {1,0,0}\\\\\\\"\\\", \
\\\"\\\\\\\"{0,0,1}\\\\\\\"\\\", \\\"\\\\\\\"{0,0,1} \
and{1,0,0}\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saCreateElasticityTensor[\!\(\*StyleBox[\"head\", \"TI\"]\)] \
returns a rank-4 symbolic elastic tensor with triclinic symmetry and 21 \
independent components \!\(\*StyleBox[SubscriptBox[\"head\", \
StyleBox[\"ijkl\", \"TI\"]], \"TI\"]\) in the form \!\(\*StyleBox[\"head\", \
\"TI\"]\)[i, j, k, l].\nsaCreateElasticityTensor[\!\(\*StyleBox[\"head\", \
\"TI\"]\), \!\(\*StyleBox[\"\\\"Symmetry\\\"\", ShowStringCharacters -> True]\
\)\[Rule]\!\(\*StyleBox[\"\[Ellipsis]\", \"TR\"]\)] returns a rank-4 elastic \
tensor with additional symmetries as follows:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\\\\"Symmetry\\\\\\\"\\\"\", \
\"\\\"\\\\\\\"Triclinic\\\\\\\"\\\"\", \
\"\\\"\\\\\\\"Monoclinic\\\\\\\"\\\"\", \"\\\"\\\\\\\"Orthotropic\\\\\\\"\\\"\
\", \"\\\"\\\\\\\"Transverse Isotropic\\\\\\\"\\\"\", \"\\\"\\\\\\\"Isotropic\
\\\\\\\"\\\"\"}, {\"\\\"Independent Components\\\"\", \"\\\"21\\\"\", \
\"\\\"13\\\"\", \"\\\"9\\\"\", \"\\\"5\\\"\", \"\\\"2\\\"\"}, {\"\\\"Symmetry \
type\\\"\", \"\\\"None\\\"\", \"\\\"Reflection\\\"\", \"\\\"Reflection\\\"\", \
\"\\\"Rotation\\\"\", \"\\\"Rotation\\\"\"}, {\"\\\"Symmetry axis\\\"\", \"\\\
\"None\\\"\", \"\\\"{0,0,1}\\\"\", \"\\\"{0,0,1} and {1,0,0}\\\"\", \
\"\\\"{0,0,1}\\\"\", \"\\\"{0,0,1} and{1,0,0}\\\"\"}}, Rule[GridBoxAlignment, \
List[Rule[\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
           "UpValues" -> None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saCreateElasticityTensor, {
            SymbolicAnisotropy`saCreateElasticityTensor[
               Pattern[SymbolicAnisotropy`Private`head, 
                Blank[]], 
               OptionsPattern[]] :> ReplaceAll[
               SymbolicAnisotropy`Private`symmetric[
                OptionValue["Symmetry"]], SymbolicAnisotropy`Private`dummy -> 
               SymbolicAnisotropy`Private`head]}], "SubValues" -> None, 
          "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
          "Options" -> {"Symmetry" -> "Triclinic"}, "Attributes" -> {}, 
          "FullName" -> "SymbolicAnisotropy`saCreateElasticityTensor"|>, 
         False]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saGroupVelocity\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saGroupVelocity[head] ...\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saGroupVelocity\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saGroupVelocity[head] ...\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> "saGroupVelocity[head] ...", 
          "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
          "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
          "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saGroupVelocity"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saHumanReadable\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saHumanReadable[\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\
\\\"]\\)] creates a rule to convert all matrix/tensor entries \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j] or \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to \\!\\(\\*StyleBox[\
\\\"headij\\\", \\\"TI\\\"]\\) or \\!\\(\\*StyleBox[\\\"headijkl\\\", \
\\\"TI\\\"]\\) respectively for ease of readability.\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{"saHumanReadable", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`head_", ",", 
                    "SymbolicAnisotropy`Private`expression_"}], "]"}], ":=", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`expression", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`head", "[", 
                    "SymbolicAnisotropy`Private`a__", "]"}], "\[RuleDelayed]", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    
                    RowBox[{"ToString", "[", 
                    "SymbolicAnisotropy`Private`head", "]"}], "<>", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"{", "SymbolicAnisotropy`Private`a", "}"}]}]}], 
                    "]"}]}]}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{"saHumanReadable", "[", 
                    "SymbolicAnisotropy`Private`head_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`head", "[", 
                    "SymbolicAnisotropy`Private`a__", "]"}], "\[RuleDelayed]", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    
                    RowBox[{"ToString", "[", 
                    "SymbolicAnisotropy`Private`head", "]"}], "<>", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"{", "SymbolicAnisotropy`Private`a", "}"}]}]}], 
                    "]"}]}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saHumanReadable\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saHumanReadable[\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\
\\\"]\\)] creates a rule to convert all matrix/tensor entries \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j] or \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to \\!\\(\\*StyleBox[\
\\\"headij\\\", \\\"TI\\\"]\\) or \\!\\(\\*StyleBox[\\\"headijkl\\\", \
\\\"TI\\\"]\\) respectively for ease of readability.\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saHumanReadable[\!\(\*StyleBox[\"head\", \"TI\"]\)] creates a rule \
to convert all matrix/tensor entries \!\(\*StyleBox[\"head\", \"TI\"]\)[i,j] \
or \!\(\*StyleBox[\"head\", \"TI\"]\)[i,j,k,l] to \!\(\*StyleBox[\"headij\", \
\"TI\"]\) or \!\(\*StyleBox[\"headijkl\", \"TI\"]\) respectively for ease of \
readability.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
          None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saHumanReadable, {
            SymbolicAnisotropy`saHumanReadable[
               Pattern[SymbolicAnisotropy`Private`head, 
                Blank[]], 
               Pattern[SymbolicAnisotropy`Private`expression, 
                Blank[]]] :> 
             ReplaceAll[
              SymbolicAnisotropy`Private`expression, 
               SymbolicAnisotropy`Private`head[
                 Pattern[SymbolicAnisotropy`Private`a, 
                  BlankSequence[]]] :> 
               ToExpression[
                ToString[SymbolicAnisotropy`Private`head] <> 
                 Map[ToString, {SymbolicAnisotropy`Private`a}]]], 
             SymbolicAnisotropy`saHumanReadable[
               Pattern[SymbolicAnisotropy`Private`head, 
                Blank[]]] :> (SymbolicAnisotropy`Private`head[
                Pattern[SymbolicAnisotropy`Private`a, 
                 BlankSequence[]]] :> 
              ToExpression[
               ToString[SymbolicAnisotropy`Private`head] <> 
                Map[ToString, {SymbolicAnisotropy`Private`a}]])}], 
          "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
          "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
          "FullName" -> "SymbolicAnisotropy`saHumanReadable"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saPhaseVelocity\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saPhaseVelocity[head] ...\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saPhaseVelocity\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saPhaseVelocity[head] ...\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> "saPhaseVelocity[head] ...", 
          "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
          "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
          "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saPhaseVelocity"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saPlaneWave\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saPlaneWave[\\!\\(\\*StyleBox[\\\"A\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\)] generates the vector function \
\\!\\(\\*StyleBox[SubscriptBox[\\\"A\\\", StyleBox[\\\"i\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) Exp[\[ImaginaryI] (\\!\\(\\*StyleBox[SubscriptBox[\\\"k\\\", \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"TI\\\"]\\) . #1 - \
\\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\) #2)]&\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"saPlaneWave", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`A_", ",", 
                    "SymbolicAnisotropy`Private`k_", ",", 
                    "SymbolicAnisotropy`Private`\[Omega]_"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", "SymbolicAnisotropy`Private`A",
                     "]"}], "===", 
                    RowBox[{"{", "3", "}"}]}], "&&", 
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", "SymbolicAnisotropy`Private`k",
                     "]"}], "===", 
                    RowBox[{"{", "3", "}"}]}]}]}], ":=", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`A", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`k", ".", "#1"}], "-", 
                    
                    RowBox[{
                    "SymbolicAnisotropy`Private`\[Omega]", " ", "#2"}]}], 
                    ")"}]}], "]"}]}], "&"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox["\" Full Name\"", "InformationRowLabel", 
                    StripOnInput -> False], "\"FullName\"", TooltipStyle -> 
                    "TextStyling"], Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saPlaneWave\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saPlaneWave[\\!\\(\\*StyleBox[\\\"A\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\)] generates the vector function \
\\!\\(\\*StyleBox[SubscriptBox[\\\"A\\\", StyleBox[\\\"i\\\", \\\"TI\\\"]], \
\\\"TI\\\"]\\) Exp[\[ImaginaryI] (\\!\\(\\*StyleBox[SubscriptBox[\\\"k\\\", \
StyleBox[\\\"j\\\", \\\"TI\\\"]], \\\"TI\\\"]\\) . #1 - \
\\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\) #2)]&\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saPlaneWave[\!\(\*StyleBox[\"A\", \"TI\"]\), \!\(\*StyleBox[\"k\", \
\"TI\"]\), \!\(\*StyleBox[\"w\", \"TI\"]\)] generates the vector function \
\!\(\*StyleBox[SubscriptBox[\"A\", StyleBox[\"i\", \"TI\"]], \"TI\"]\) Exp[\
\[ImaginaryI] (\!\(\*StyleBox[SubscriptBox[\"k\", StyleBox[\"j\", \"TI\"]], \
\"TI\"]\) . #1 - \!\(\*StyleBox[\"w\", \"TI\"]\) #2)]&", "Documentation" -> 
          None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saPlaneWave, {Condition[
               SymbolicAnisotropy`saPlaneWave[
                Pattern[SymbolicAnisotropy`Private`A, 
                 Blank[]], 
                Pattern[SymbolicAnisotropy`Private`k, 
                 Blank[]], 
                Pattern[SymbolicAnisotropy`Private`\[Omega], 
                 Blank[]]], 
               And[
               Dimensions[SymbolicAnisotropy`Private`A] === {3}, 
                Dimensions[SymbolicAnisotropy`Private`k] === {3}]] :> (
              SymbolicAnisotropy`Private`A 
              Exp[I (Dot[SymbolicAnisotropy`Private`k, #] - 
                 SymbolicAnisotropy`Private`\[Omega] #2)]& )}], "SubValues" -> 
          None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
          None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saPlaneWave"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saReflectionTransformation\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saReflectionTransformation[\\!\\(\\*StyleBox[\\\"vec\\\
\", \\\"TI\\\"]\\)] returns a rank-8 tensor derived from 4 copies of a \
reflection transform along three dimensional vector \\!\\(\\*StyleBox[\\\"vec\
\\\", \\\"TI\\\"]\\)\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    
                    RowBox[{"saReflectionTransformation", "[", 
                    "SymbolicAnisotropy`Private`v_", "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`r", "=", 
                    
                    RowBox[{"ReflectionMatrix", "[", 
                    "SymbolicAnisotropy`Private`v", "]"}]}], "}"}], ",", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`r", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`r", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`r", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`r"}]}], 
                    "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saReflectionTransformation\""}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saReflectionTransformation[\\!\\(\\*StyleBox[\\\"vec\\\
\", \\\"TI\\\"]\\)] returns a rank-8 tensor derived from 4 copies of a \
reflection transform along three dimensional vector \\!\\(\\*StyleBox[\\\"vec\
\\\", \\\"TI\\\"]\\)\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saReflectionTransformation[\!\(\*StyleBox[\"vec\", \"TI\"]\)] \
returns a rank-8 tensor derived from 4 copies of a reflection transform along \
three dimensional vector \!\(\*StyleBox[\"vec\", \"TI\"]\)", "Documentation" -> 
          None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saReflectionTransformation, {
            SymbolicAnisotropy`saReflectionTransformation[
               Pattern[SymbolicAnisotropy`Private`v, 
                Blank[]]] :> 
             With[{SymbolicAnisotropy`Private`r = 
                ReflectionMatrix[SymbolicAnisotropy`Private`v]}, 
               TensorProduct[
               SymbolicAnisotropy`Private`r, SymbolicAnisotropy`Private`r, 
                SymbolicAnisotropy`Private`r, 
                SymbolicAnisotropy`Private`r]]}], "SubValues" -> None, 
          "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
          "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saReflectionTransformation"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saRotationTransformation\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saRotationTransformation[\\!\\(\\*StyleBox[\\\"ang\\\",\
 \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"vec\\\", \\\"TI\\\"]\\)] returns a \
rank-8 tensor derived from 4 copies of a rotation transform of angle \
\\!\\(\\*StyleBox[\\\"ang\\\", \\\"TI\\\"]\\) around three dimensional vector \
\\!\\(\\*StyleBox[\\\"vec\\\", \\\"TI\\\"]\\)\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{"saRotationTransformation", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`\[Theta]_", ",", 
                    "SymbolicAnisotropy`Private`v_"}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`r", "=", 
                    RowBox[{"RotationMatrix", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`\[Theta]", ",", 
                    "SymbolicAnisotropy`Private`v"}], "]"}]}], "}"}], ",", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`r", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`r", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`r", 
                    "\[TensorProduct]", "SymbolicAnisotropy`Private`r"}]}], 
                    "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saRotationTransformation\""}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saRotationTransformation[\\!\\(\\*StyleBox[\\\"ang\\\",\
 \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"vec\\\", \\\"TI\\\"]\\)] returns a \
rank-8 tensor derived from 4 copies of a rotation transform of angle \
\\!\\(\\*StyleBox[\\\"ang\\\", \\\"TI\\\"]\\) around three dimensional vector \
\\!\\(\\*StyleBox[\\\"vec\\\", \\\"TI\\\"]\\)\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saRotationTransformation[\!\(\*StyleBox[\"ang\", \"TI\"]\), \
\!\(\*StyleBox[\"vec\", \"TI\"]\)] returns a rank-8 tensor derived from 4 \
copies of a rotation transform of angle \!\(\*StyleBox[\"ang\", \"TI\"]\) \
around three dimensional vector \!\(\*StyleBox[\"vec\", \"TI\"]\)", 
          "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saRotationTransformation, {
            SymbolicAnisotropy`saRotationTransformation[
               Pattern[SymbolicAnisotropy`Private`\[Theta], 
                Blank[]], 
               Pattern[SymbolicAnisotropy`Private`v, 
                Blank[]]] :> 
             With[{SymbolicAnisotropy`Private`r = 
                RotationMatrix[
                 SymbolicAnisotropy`Private`\[Theta], 
                  SymbolicAnisotropy`Private`v]}, 
               TensorProduct[
               SymbolicAnisotropy`Private`r, SymbolicAnisotropy`Private`r, 
                SymbolicAnisotropy`Private`r, 
                SymbolicAnisotropy`Private`r]]}], "SubValues" -> None, 
          "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
          "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saRotationTransformation"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saTensor2Voigt\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saTensor2Voigt[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\)] converts a \
rank-4 symbolic elastic \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\) with \
entries \\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to the \
corresponding Voigt 6x6 matrix with entries \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j]\"", "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.},
                     StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"saTensor2Voigt", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`symbol_", ",", 
                    "SymbolicAnisotropy`Private`tensor_"}], "]"}], "/;", 
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", 
                    "SymbolicAnisotropy`Private`tensor", "]"}], "===", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}]}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", "=", 
                    "SymbolicAnisotropy`Private`voigtTable"}], ",", 
                    "SymbolicAnisotropy`Private`table"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`table", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`tensor", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"First", "[", 
                    RowBox[{"Position", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", ",", 
                    "SymbolicAnisotropy`Private`i"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"First", "[", 
                    RowBox[{"Position", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", ",", 
                    "SymbolicAnisotropy`Private`j"}], "]"}], "]"}]}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`i", ",", "6"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`j", ",", "6"}], 
                    "}"}]}], "]"}]}], ";", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`table", "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"saVoigtReplacementRule", "[", 
                    "SymbolicAnisotropy`Private`symbol", "]"}]}]}]}], 
                    "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saTensor2Voigt\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saTensor2Voigt[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\)] converts a \
rank-4 symbolic elastic \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\) with \
entries \\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to the \
corresponding Voigt 6x6 matrix with entries \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j]\"", "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.},
                     StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saTensor2Voigt[\!\(\*StyleBox[\"head\", \"TI\"]\), \!\(\*StyleBox[\
\"tensor\", \"TI\"]\)] converts a rank-4 symbolic elastic \
\!\(\*StyleBox[\"tensor\", \"TI\"]\) with entries \!\(\*StyleBox[\"head\", \
\"TI\"]\)[i,j,k,l] to the corresponding Voigt 6x6 matrix with entries \
\!\(\*StyleBox[\"head\", \"TI\"]\)[i,j]", "Documentation" -> None, 
          "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saTensor2Voigt, {Condition[
               SymbolicAnisotropy`saTensor2Voigt[
                Pattern[SymbolicAnisotropy`Private`symbol, 
                 Blank[]], 
                Pattern[SymbolicAnisotropy`Private`tensor, 
                 Blank[]]], 
               Dimensions[SymbolicAnisotropy`Private`tensor] === {3, 3, 3, 
                3}] :> Module[{
               SymbolicAnisotropy`Private`ip = 
                SymbolicAnisotropy`Private`voigtTable, 
                SymbolicAnisotropy`Private`table}, 
               SymbolicAnisotropy`Private`table = Table[
                  Part[SymbolicAnisotropy`Private`tensor, 
                   Apply[Sequence, 
                    First[
                    Position[
                    SymbolicAnisotropy`Private`ip, 
                    SymbolicAnisotropy`Private`i]]], 
                   Apply[Sequence, 
                    First[
                    Position[
                    SymbolicAnisotropy`Private`ip, 
                    SymbolicAnisotropy`Private`j]]]], {
                  SymbolicAnisotropy`Private`i, 6}, {
                  SymbolicAnisotropy`Private`j, 6}]; 
               ReplaceAll[SymbolicAnisotropy`Private`table, 
                 SymbolicAnisotropy`saVoigtReplacementRule[
                 SymbolicAnisotropy`Private`symbol]]]}], "SubValues" -> None, 
          "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
          "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saTensor2Voigt"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saTensorReplacementRule\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saTensorReplacementRule[\\!\\(\\*StyleBox[\\\"head\\\",\
 \\\"TI\\\"]\\)] is a replacement rule for matrix indices to tensor indices \
for elements with \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j].\\nThere is no matrix-to-tensor reshaping taking place by \
the replacement rule, just relabelling of indices.\\nFor instance \
c[6,6]/.saTensorReplacementRule[c] returns c[1,2,1,2]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    
                    RowBox[{"saTensorReplacementRule", "[", 
                    "SymbolicAnisotropy`Private`symbol_", "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", "=", 
                    "SymbolicAnisotropy`Private`voigtTable"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`symbol", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"SymbolicAnisotropy`Private`symbol", "[", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"First", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`ip", ",", "a"}], 
                    "]"}], "]"}]}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"First", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`ip", ",", "b"}], 
                    "]"}], "]"}]}]}], "]"}]}]}], "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saTensorReplacementRule\""}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saTensorReplacementRule[\\!\\(\\*StyleBox[\\\"head\\\",\
 \\\"TI\\\"]\\)] is a replacement rule for matrix indices to tensor indices \
for elements with \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j].\\nThere is no matrix-to-tensor reshaping taking place by \
the replacement rule, just relabelling of indices.\\nFor instance \
c[6,6]/.saTensorReplacementRule[c] returns c[1,2,1,2]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saTensorReplacementRule[\!\(\*StyleBox[\"head\", \"TI\"]\)] is a \
replacement rule for matrix indices to tensor indices for elements with \
\!\(\*StyleBox[\"head\", \"TI\"]\)[i,j].\nThere is no matrix-to-tensor \
reshaping taking place by the replacement rule, just relabelling of indices.\n\
For instance c[6,6]/.saTensorReplacementRule[c] returns c[1,2,1,2]", 
          "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saTensorReplacementRule, {
            SymbolicAnisotropy`saTensorReplacementRule[
               Pattern[SymbolicAnisotropy`Private`symbol, 
                Blank[]]] :> 
             With[{SymbolicAnisotropy`Private`ip = 
                SymbolicAnisotropy`Private`voigtTable}, 
               SymbolicAnisotropy`Private`symbol[
                 Pattern[$CellContext`a, 
                  Blank[]], 
                 Pattern[$CellContext`b, 
                  Blank[]]] :> SymbolicAnisotropy`Private`symbol[
                 Apply[Sequence, 
                  First[
                   Position[SymbolicAnisotropy`Private`ip, $CellContext`a]]], 
                 
                 Apply[Sequence, 
                  First[
                   Position[
                   SymbolicAnisotropy`Private`ip, $CellContext`b]]]]]}], 
          "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
          "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
          "FullName" -> "SymbolicAnisotropy`saTensorReplacementRule"|>, 
         False]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saVariables\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saVariables[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\)] returns the \
independent terms of $head in expression $expr.\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{"saVariables", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`c_", ",", 
                    "SymbolicAnisotropy`Private`expr_"}], "]"}], ":=", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    
                    RowBox[{"Variables", "[", 
                    "SymbolicAnisotropy`Private`expr", "]"}], ",", 
                    RowBox[{"SymbolicAnisotropy`Private`a_", "/;", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"Characters", "[", 
                    
                    RowBox[{"ToString", "[", "SymbolicAnisotropy`Private`a", 
                    "]"}], "]"}], "]"}], "===", 
                    
                    RowBox[{"ToString", "[", "SymbolicAnisotropy`Private`c", 
                    "]"}]}]}]}], "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saVariables\""}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saVariables[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\)] returns the \
independent terms of $head in expression $expr.\"", "InformationUsageText", 
                    LineSpacing -> {1.5, 1.5, 3.}, StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saVariables[\!\(\*StyleBox[\"head\", \"TI\"]\), \
\!\(\*StyleBox[\"expr\", \"TI\"]\)] returns the independent terms of $head in \
expression $expr.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
          None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saVariables, {
            SymbolicAnisotropy`saVariables[
               Pattern[SymbolicAnisotropy`Private`c, 
                Blank[]], 
               Pattern[SymbolicAnisotropy`Private`expr, 
                Blank[]]] :> Cases[
               Variables[SymbolicAnisotropy`Private`expr], 
               Condition[
                Pattern[SymbolicAnisotropy`Private`a, 
                 Blank[]], First[
                  Characters[
                   ToString[SymbolicAnisotropy`Private`a]]] === 
                ToString[SymbolicAnisotropy`Private`c]]]}], "SubValues" -> 
          None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
          None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saVariables"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saVoigt2Tensor\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"aVoigt2Tensor[\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\
\"]\\), \\!\\(\\*StyleBox[\\\"matrix\\\", \\\"TI\\\"]\\)] converts a symbolic \
Voigt 6x6 matrix with entries \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j] to the corresponding rank-4 elastic \
\\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\) with entries \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"saVoigt2Tensor", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`symbol_", ",", 
                    "SymbolicAnisotropy`Private`matrix_"}], "]"}], "/;", 
                    RowBox[{
                    
                    RowBox[{"Dimensions", "[", 
                    "SymbolicAnisotropy`Private`matrix", "]"}], "===", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "6"}], "}"}]}]}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", "=", 
                    "SymbolicAnisotropy`Private`voigtTable"}], ",", 
                    "SymbolicAnisotropy`Private`table"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`table", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`matrix", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`i", ",", 
                    "SymbolicAnisotropy`Private`j"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", 
                    "\[LeftDoubleBracket]", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`k", ",", 
                    "SymbolicAnisotropy`Private`l"}], 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`i", ",", "3"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`j", ",", "3"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`k", ",", "3"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`l", ",", "3"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"SymbolicAnisotropy`Private`table", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"saTensorReplacementRule", "[", 
                    "SymbolicAnisotropy`Private`symbol", "]"}]}]}]}], 
                    "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saVoigt2Tensor\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"aVoigt2Tensor[\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\
\"]\\), \\!\\(\\*StyleBox[\\\"matrix\\\", \\\"TI\\\"]\\)] converts a symbolic \
Voigt 6x6 matrix with entries \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j] to the corresponding rank-4 elastic \
\\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\) with entries \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "aVoigt2Tensor[\!\(\*StyleBox[\"head\", \"TI\"]\), \
\!\(\*StyleBox[\"matrix\", \"TI\"]\)] converts a symbolic Voigt 6x6 matrix \
with entries \!\(\*StyleBox[\"head\", \"TI\"]\)[i,j] to the corresponding \
rank-4 elastic \!\(\*StyleBox[\"tensor\", \"TI\"]\) with entries \
\!\(\*StyleBox[\"head\", \"TI\"]\)[i,j,k,l]", "Documentation" -> None, 
          "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saVoigt2Tensor, {Condition[
               SymbolicAnisotropy`saVoigt2Tensor[
                Pattern[SymbolicAnisotropy`Private`symbol, 
                 Blank[]], 
                Pattern[SymbolicAnisotropy`Private`matrix, 
                 Blank[]]], 
               Dimensions[SymbolicAnisotropy`Private`matrix] === {6, 6}] :> 
             Module[{SymbolicAnisotropy`Private`ip = 
                SymbolicAnisotropy`Private`voigtTable, 
                SymbolicAnisotropy`Private`table}, 
               SymbolicAnisotropy`Private`table = Table[
                  Part[SymbolicAnisotropy`Private`matrix, 
                   Part[
                   SymbolicAnisotropy`Private`ip, 
                    SymbolicAnisotropy`Private`i, 
                    SymbolicAnisotropy`Private`j], 
                   Part[
                   SymbolicAnisotropy`Private`ip, 
                    SymbolicAnisotropy`Private`k, 
                    SymbolicAnisotropy`Private`l]], {
                  SymbolicAnisotropy`Private`i, 3}, {
                  SymbolicAnisotropy`Private`j, 3}, {
                  SymbolicAnisotropy`Private`k, 3}, {
                  SymbolicAnisotropy`Private`l, 3}]; ReplaceAll[
                 Transpose[SymbolicAnisotropy`Private`table, {1, 2, 3}], 
                 SymbolicAnisotropy`saTensorReplacementRule[
                 SymbolicAnisotropy`Private`symbol]]]}], "SubValues" -> None, 
          "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
          "Options" -> None, "Attributes" -> {}, "FullName" -> 
          "SymbolicAnisotropy`saVoigt2Tensor"|>, False]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{"\"saVoigtReplacementRule\""}, {
       InterpretationBox[
        StyleBox[
         FrameBox[
          
          DynamicModuleBox[{
           System`InformationDump`open$$ = False, 
            System`InformationDump`mouseOver$$ = False}, 
           PaneSelectorBox[{True -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", BaseStyle -> None, 
                    StripOnInput -> False], 
                    FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saVoigtReplacementRule[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)] is a replacement rule for tensor indices to matrix indices \
for elements with \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j,k,l].\\nThere is no tensor-to-matrix reshaping taking \
place by the replacement rule, just relabelling of indices.\\nFor instance \
c[1,2,1,2]/.saVoigtReplacementRule[c] returns c[6,6]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Definitions\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"Definitions\"", TooltipStyle -> "TextStyling"],
                     Annotation[#, "Definitions", "Tooltip"]& ], 
                    "DialogStyle", StripOnInput -> False]}, {
                    TemplateBox[{"\"\[ThinSpace]\"", 
                    GridBox[{{
                    RowBox[{
                    
                    RowBox[{"saVoigtReplacementRule", "[", 
                    "SymbolicAnisotropy`Private`symbol_", "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", "=", 
                    "SymbolicAnisotropy`Private`voigtTable"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`symbol", "[", 
                    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"SymbolicAnisotropy`Private`symbol", "[", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"a", ",", "b"}], "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"c", ",", "d"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FrameMargins -> {{6, 0}, {3, 6}}], "\"\""}, {
                  PaneBox[
                   GridBox[{{
                    
                    DynamicModuleBox[{
                    System`InformationDump`open$$ = {
                    False, False, False, False, False, False}}, 
                    StyleBox[
                    GridBox[{{
                    TagBox[
                    TooltipBox[
                    StyleBox[
                    "\" Full Name\"", "InformationRowLabel", StripOnInput -> 
                    False], "\"FullName\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "FullName", "Tooltip"]& ], 
                    "\"SymbolicAnisotropy`saVoigtReplacementRule\""}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
                    GridBoxAlignment -> {"Columns" -> {Right, Left}}, 
                    RowSpacings -> 2, GridBoxDividers -> None], "DialogStyle",
                     StripOnInput -> False], DynamicModuleValues :> {}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    RowSpacings -> 9], FrameMargins -> {{6, 6}, {6, 3}}], 
                  ""}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UpPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, False], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"], False -> TagBox[
               GridBox[{{
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\" Symbol\"", "InformationTitleText", StripOnInput -> 
                    False], FrameMargins -> {{4, 0}, {-1, 1}}], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationTitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   PaneBox[
                    StyleBox[
                    "\"saVoigtReplacementRule[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)] is a replacement rule for tensor indices to matrix indices \
for elements with \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j,k,l].\\nThere is no tensor-to-matrix reshaping taking \
place by the replacement rule, just relabelling of indices.\\nFor instance \
c[1,2,1,2]/.saVoigtReplacementRule[c] returns c[6,6]\"", 
                    "InformationUsageText", LineSpacing -> {1.5, 1.5, 3.}, 
                    StripOnInput -> False], 
                    FrameMargins -> {{10, 10}, {8, 10}}], BaseStyle -> 
                   "InformationUsageSubtitleBackground", StripOnInput -> 
                   False], 
                  ItemBox[
                  "\"\"", BaseStyle -> "InformationUsageSubtitleBackground", 
                   StripOnInput -> False]}, {
                  ItemBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]], True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]}, 
                    Dynamic[System`InformationDump`mouseOver$$]], 
                    ButtonFunction :> 
                    FEPrivate`Set[System`InformationDump`open$$, True], 
                    Alignment -> Left, ImageSize -> Full, 
                    FrameMargins -> {{9, 0}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> {"Default" -> None}, Evaluator -> Automatic,
                     Method -> "Preemptive"], 
                    
                    EventHandlerTag[{
                    "MouseEntered" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                    "MouseExited" :> 
                    FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], BaseStyle -> 
                   "InformationTitleBackground", StripOnInput -> False], 
                  "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Left, Right}, "Rows" -> {{Center}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                FrameStyle -> Directive[
                  GrayLevel[0.8], 
                  Thickness[Tiny]]], "Grid"]}, 
            Dynamic[System`InformationDump`open$$], ImageSize -> Automatic, 
            FrameMargins -> 0, BaselinePosition -> Baseline], 
           DynamicModuleValues :> {}], BaseStyle -> "InformationGridFrame", 
          StripOnInput -> False], "InformationGridPlain", StripOnInput -> 
         False], 
        InformationData[<|
         "ObjectType" -> "Symbol", "Usage" -> 
          "saVoigtReplacementRule[\!\(\*StyleBox[\"head\", \"TI\"]\)] is a \
replacement rule for tensor indices to matrix indices for elements with \
\!\(\*StyleBox[\"head\", \"TI\"]\)[i,j,k,l].\nThere is no tensor-to-matrix \
reshaping taking place by the replacement rule, just relabelling of indices.\n\
For instance c[1,2,1,2]/.saVoigtReplacementRule[c] returns c[6,6]", 
          "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
          "DownValues" -> 
          Information`InformationValueForm[
           DownValues, SymbolicAnisotropy`saVoigtReplacementRule, {
            SymbolicAnisotropy`saVoigtReplacementRule[
               Pattern[SymbolicAnisotropy`Private`symbol, 
                Blank[]]] :> 
             With[{SymbolicAnisotropy`Private`ip = 
                SymbolicAnisotropy`Private`voigtTable}, 
               SymbolicAnisotropy`Private`symbol[
                 Pattern[$CellContext`a, 
                  Blank[]], 
                 Pattern[$CellContext`b, 
                  Blank[]], 
                 Pattern[$CellContext`c, 
                  Blank[]], 
                 Pattern[$CellContext`d, 
                  Blank[]]] :> SymbolicAnisotropy`Private`symbol[
                 Part[
                 SymbolicAnisotropy`Private`ip, $CellContext`a, \
$CellContext`b], 
                 Part[
                 SymbolicAnisotropy`Private`ip, $CellContext`c, \
$CellContext`d]]]}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
          None, "FormatValues" -> None, "Options" -> None, "Attributes" -> {},
           "FullName" -> "SymbolicAnisotropy`saVoigtReplacementRule"|>, 
         False]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{{3.921768746932231*^9, 3.921768752280664*^9}, {
  3.9217688476071873`*^9, 3.921768876369878*^9}},
 CellLabel->
  "Out[733]=",ExpressionUUID->"4fb3d593-a210-4988-9a45-c178fd3d743f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GeneralUtilities`SetUsage"}]], "Input",
 CellChangeTimes->{3.921396788401649*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"1f9d8450-3807-411f-af4a-19c3923e6aab"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SetUsage[\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\
\\*StyleBox[\\\\\\\"symbol\\\\\\\", \
\\\\\\\"TI\\\\\\\"]\\\\)\[VeryThinSpace][...]\[LetterSpace]does\[LetterSpace]\
something\\\\\\\"\\\", ShowStringCharacters -> True]\\)] sets the usage \
message for \\!\\(\\*StyleBox[\\\"symbol\\\", \\\"TI\\\"]\\), which should be \
a symbol on the current $ContextPath (usually this is the case). \\nSetUsage[\
\\!\\(\\*StyleBox[\\\"symbol\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"\\\\\\\"usage\\\\\\\"\\\", ShowStringCharacters -> \
True]\\)] explicits specifies the symbol to attach the usage to.\\n\[Bullet] \
Use a single line for each separate usage, using backslash to continue lines \
if they would otherwise overflow a line in your editor. \\n\[Bullet] Tables \
(of any size) can be specified using |:\\n| \\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\) | \\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\) | \
\\!\\(\\*StyleBox[\\\"c\\\", \\\"TI\\\"]\\) |\\n| \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) | \\!\\(\\*StyleBox[\\\"e\\\", \\\
\"TI\\\"]\\) | \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) |\\nwhich formats \
as:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
StyleBox[\\\\\\\\\\\\\\\"a\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"b\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"c\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"d\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"e\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"f\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\\n\[Bullet] \
Table rows must start and end with a |, and interior | must be seperated by \
spaces on both sides.\\n\[Bullet] If the second row of a table consists of \
only \\\"---\\\" entries, the first row will be styled in bold.\\n\[Bullet] \
Bullets can be written by starting a line with *.\\n\[Bullet] Characters that \
are otherwise interpreted can be escaped by writing their base 10 character \
code via :dddd.\\n\[Bullet] The following special syntax is \
supported:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"foo$\\\\\\\"\\\", \\\"\\\\\
\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}, {\\\"\\\\\\\"foo$i\
\\\\\\\"\\\", \\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[SubscriptBox[\\\
\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\", \
StyleBox[\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]], \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\
\\\\)\\\\\\\"\\\"}, {\\\"\\\\\\\"foo$(i,j)\\\\\\\"\\\", \\\"\\\\\\\"\\\\\\\\!\
\\\\\\\\(\\\\\\\\*StyleBox[SubscriptBox[\\\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\", \
StyleBox[\\\\\\\\\\\\\\\"i,j\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]], \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\
\\\\)\\\\\\\"\\\"}, {\\\"\\\\\\\"'foo'\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\"\\\\\\\"\\\"}, {\\\"\\\\\\\"$$\
\\\\\\\"\\\", \\\"\\\\\\\"\[Ellipsis]\\\\\\\"\\\"}, \
{\\\"\\\\\\\"foo$$\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"foo\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\[Ellipsis]\\\\\\\\)\\\\\\\"\\\"}, \
{\\\"\\\\\\\"->\\\\\\\"\\\", \\\"\\\\\\\"\[Rule]\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldFirst", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GeneralUtilities`SetUsage\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SetUsage[\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\
\\*StyleBox[\\\\\\\"symbol\\\\\\\", \
\\\\\\\"TI\\\\\\\"]\\\\)\[VeryThinSpace][...]\[LetterSpace]does\[LetterSpace]\
something\\\\\\\"\\\", ShowStringCharacters -> True]\\)] sets the usage \
message for \\!\\(\\*StyleBox[\\\"symbol\\\", \\\"TI\\\"]\\), which should be \
a symbol on the current $ContextPath (usually this is the case). \\nSetUsage[\
\\!\\(\\*StyleBox[\\\"symbol\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"\\\\\\\"usage\\\\\\\"\\\", ShowStringCharacters -> \
True]\\)] explicits specifies the symbol to attach the usage to.\\n\[Bullet] \
Use a single line for each separate usage, using backslash to continue lines \
if they would otherwise overflow a line in your editor. \\n\[Bullet] Tables \
(of any size) can be specified using |:\\n| \\!\\(\\*StyleBox[\\\"a\\\", \
\\\"TI\\\"]\\) | \\!\\(\\*StyleBox[\\\"b\\\", \\\"TI\\\"]\\) | \
\\!\\(\\*StyleBox[\\\"c\\\", \\\"TI\\\"]\\) |\\n| \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\) | \\!\\(\\*StyleBox[\\\"e\\\", \\\
\"TI\\\"]\\) | \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) |\\nwhich formats \
as:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
StyleBox[\\\\\\\\\\\\\\\"a\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"b\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"c\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"d\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"e\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"f\\\\\\\\\\\\\
\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\\n\[Bullet] \
Table rows must start and end with a |, and interior | must be seperated by \
spaces on both sides.\\n\[Bullet] If the second row of a table consists of \
only \\\"---\\\" entries, the first row will be styled in bold.\\n\[Bullet] \
Bullets can be written by starting a line with *.\\n\[Bullet] Characters that \
are otherwise interpreted can be escaped by writing their base 10 character \
code via :dddd.\\n\[Bullet] The following special syntax is \
supported:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"foo$\\\\\\\"\\\", \\\"\\\\\
\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}, {\\\"\\\\\\\"foo$i\
\\\\\\\"\\\", \\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[SubscriptBox[\\\
\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\", \
StyleBox[\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]], \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\
\\\\)\\\\\\\"\\\"}, {\\\"\\\\\\\"foo$(i,j)\\\\\\\"\\\", \\\"\\\\\\\"\\\\\\\\!\
\\\\\\\\(\\\\\\\\*StyleBox[SubscriptBox[\\\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\", \
StyleBox[\\\\\\\\\\\\\\\"i,j\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]], \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\
\\\\)\\\\\\\"\\\"}, {\\\"\\\\\\\"'foo'\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"foo\\\\\\\\\\\\\\\"\\\\\\\"\\\"}, {\\\"\\\\\\\"$$\
\\\\\\\"\\\", \\\"\\\\\\\"\[Ellipsis]\\\\\\\"\\\"}, \
{\\\"\\\\\\\"foo$$\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"foo\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\[Ellipsis]\\\\\\\\)\\\\\\\"\\\"}, \
{\\\"\\\\\\\"->\\\\\\\"\\\", \\\"\\\\\\\"\[Rule]\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "SetUsage[\!\(\*StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"symbol\\\", \\\"TI\\\
\"]\\)\[VeryThinSpace][...]\[LetterSpace]does\[LetterSpace]something\\\"\", \
ShowStringCharacters -> True]\)] sets the usage message for \
\!\(\*StyleBox[\"symbol\", \"TI\"]\), which should be a symbol on the current \
$ContextPath (usually this is the case). \n\
SetUsage[\!\(\*StyleBox[\"symbol\", \"TI\"]\), \!\(\*StyleBox[\"\\\"usage\\\"\
\", ShowStringCharacters -> True]\)] explicits specifies the symbol to attach \
the usage to.\n\[Bullet] Use a single line for each separate usage, using \
backslash to continue lines if they would otherwise overflow a line in your \
editor. \n\[Bullet] Tables (of any size) can be specified using |:\n| \
\!\(\*StyleBox[\"a\", \"TI\"]\) | \!\(\*StyleBox[\"b\", \"TI\"]\) | \
\!\(\*StyleBox[\"c\", \"TI\"]\) |\n| \!\(\*StyleBox[\"d\", \"TI\"]\) | \
\!\(\*StyleBox[\"e\", \"TI\"]\) | \!\(\*StyleBox[\"f\", \"TI\"]\) |\nwhich \
formats as:\n\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"a\\\
\\\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \
\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"b\\\\\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\
\", \"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"c\\\\\\\", \\\\\\\"TI\\\\\\\"]\\\\)\
\\\"\"}, {\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"d\\\\\\\", \
\\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"e\\\\\\\
\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"f\\\
\\\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\"}}, Rule[GridBoxAlignment, \
List[Rule[\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)\n\[Bullet] Table rows must start and end with \
a |, and interior | must be seperated by spaces on both sides.\n\[Bullet] If \
the second row of a table consists of only \"---\" entries, the first row \
will be styled in bold.\n\[Bullet] Bullets can be written by starting a line \
with *.\n\[Bullet] Characters that are otherwise interpreted can be escaped \
by writing their base 10 character code via :dddd.\n\[Bullet] The following \
special syntax is supported:\n\!\(\*TagBox[GridBox[{{\"\\\"foo$\\\"\", \"\\\"\
\\\\!\\\\(\\\\*StyleBox[\\\\\\\"foo\\\\\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\"}, \
{\"\\\"foo$i\\\"\", \
\"\\\"\\\\!\\\\(\\\\*StyleBox[SubscriptBox[\\\\\\\"foo\\\\\\\", StyleBox[\\\\\
\\\"i\\\\\\\", \\\\\\\"TI\\\\\\\"]], \\\\\\\"TI\\\\\\\"]\\\\)\\\"\"}, \
{\"\\\"foo$(i,j)\\\"\", \
\"\\\"\\\\!\\\\(\\\\*StyleBox[SubscriptBox[\\\\\\\"foo\\\\\\\", StyleBox[\\\\\
\\\"i,j\\\\\\\", \\\\\\\"TI\\\\\\\"]], \\\\\\\"TI\\\\\\\"]\\\\)\\\"\"}, {\"\\\
\"'foo'\\\"\", \"\\\"\\\\\\\"foo\\\\\\\"\\\"\"}, {\"\\\"$$\\\"\", \"\\\"\
\[Ellipsis]\\\"\"}, {\"\\\"foo$$\\\"\", \
\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"foo\\\\\\\", \\\\\\\"TI\\\\\\\"]\
\[Ellipsis]\\\\)\\\"\"}, {\"\\\"->\\\"\", \"\\\"\[Rule]\\\"\"}}, \
Rule[GridBoxAlignment, List[Rule[\"Columns\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\"Columns\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\"Rows\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\"Columns\", List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {HoldFirst, Protected, ReadProtected}, "FullName" -> 
    "GeneralUtilities`SetUsage"|>, False]]], "Output",
 CellChangeTimes->{3.921396789096784*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e4dfa91b-9800-42ac-8ce7-8ac0bd02ee03"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating symbolic elastic tensors", "Section",
 CellChangeTimes->{{3.921118436772196*^9, 
  3.9211184441441793`*^9}},ExpressionUUID->"6c1e6453-e2de-4b2d-932f-\
e9b0cb490d5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", "Bold"}], "]"}], ",", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"symbol", " ", "=", "c"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"saCreateElasticityTensor", "[", 
               RowBox[{"symbol", "  ", ",", 
                RowBox[{"\"\<Symmetry\>\"", " ", "->", " ", "#"}]}], "]"}], 
              "\[IndentingNewLine]", "//", 
              RowBox[{
               RowBox[{"saTensor2Voigt", "[", 
                RowBox[{"symbol", " ", ",", " ", "#"}], "]"}], "&"}]}], 
             "\[IndentingNewLine]", "//", 
             RowBox[{
              RowBox[{"saHumanReadable", "[", 
               RowBox[{"symbol", ",", " ", "#"}], "]"}], "&"}]}], 
            "\[IndentingNewLine]", "//", "FullSimplify"}], 
           "\[IndentingNewLine]", "//", "TableForm"}]}], 
         "\[IndentingNewLine]", "]"}]}], "}"}], ",", " ", 
      RowBox[{"Alignment", "->", 
       RowBox[{"{", 
        RowBox[{"Center", ",", "Center"}], "}"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Triclinic\>\"", ",", "\"\<Monoclinic\>\"", ",", 
     "\"\<Orthotropic\>\"", ",", " ", "\"\<Transverse Isotropic\>\"", ",", 
     " ", "\"\<Isotropic\>\""}], "}"}]}], "//", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"#", ",", "\"\<\\n\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.921118745293585*^9, 3.9211188526973047`*^9}, {
  3.921118893334611*^9, 3.921119001059733*^9}, {3.921119040848731*^9, 
  3.921119242433075*^9}, {3.921120204052947*^9, 3.921120214810502*^9}, {
  3.921128250300222*^9, 3.921128268292336*^9}, {3.9217686690101433`*^9, 
  3.921768672907722*^9}, {3.921769058762806*^9, 3.921769074217452*^9}},
 CellLabel->
  "In[738]:=",ExpressionUUID->"8a57b582-7ff5-4e76-82f1-5c51309a3183"],

Cell[BoxData[
 TemplateBox[{"\n", "\"\\n\"", 
   TagBox[
    GridBox[{{
       StyleBox["\"Triclinic\"", Bold, StripOnInput -> False]}, {
       TagBox[
        GridBox[{{"c11", "c12", "c13", "c14", "c15", "c16"}, {
          "c12", "c22", "c23", "c24", "c52", "c62"}, {
          "c13", "c23", "c33", "c43", "c53", "c63"}, {
          "c14", "c24", "c43", "c44", "c54", "c64"}, {
          "c15", "c52", "c53", "c54", "c55", "c65"}, {
          "c16", "c62", "c63", "c64", "c65", "c66"}}, RowSpacings -> 1, 
         ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
         Left], 
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{
       StyleBox["\"Monoclinic\"", Bold, StripOnInput -> False]}, {
       TagBox[
        GridBox[{{"c11", "c12", "c13", "0", "0", "c16"}, {
          "c12", "c22", "c23", "0", "0", "c62"}, {
          "c13", "c23", "c33", "0", "0", "c63"}, {
          "0", "0", "0", "c44", "c54", "0"}, {
          "0", "0", "0", "c54", "c55", "0"}, {
          "c16", "c62", "c63", "0", "0", "c66"}}, RowSpacings -> 1, 
         ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
         Left], 
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{
       StyleBox["\"Orthotropic\"", Bold, StripOnInput -> False]}, {
       TagBox[
        GridBox[{{"c11", "c12", "c13", "0", "0", "0"}, {
          "c12", "c22", "c23", "0", "0", "0"}, {
          "c13", "c23", "c33", "0", "0", "0"}, {
          "0", "0", "0", "c44", "0", "0"}, {"0", "0", "0", "0", "c55", "0"}, {
          "0", "0", "0", "0", "0", "c66"}}, RowSpacings -> 1, ColumnSpacings -> 
         3, RowAlignments -> Baseline, ColumnAlignments -> Left], 
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{
       StyleBox["\"Transverse Isotropic\"", Bold, StripOnInput -> False]}, {
       TagBox[
        GridBox[{{"c11", "c12", "c13", "0", "0", "0"}, {
          "c12", "c11", "c13", "0", "0", "0"}, {
          "c13", "c13", "c33", "0", "0", "0"}, {
          "0", "0", "0", "c55", "0", "0"}, {"0", "0", "0", "0", "c55", "0"}, {
          "0", "0", "0", "0", "0", 
           FractionBox[
            RowBox[{"c11", "-", "c12"}], "2"]}}, RowSpacings -> 1, 
         ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
         Left], 
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
   TagBox[
    GridBox[{{
       StyleBox["\"Isotropic\"", Bold, StripOnInput -> False]}, {
       TagBox[
        GridBox[{{"c11", "c12", "c12", "0", "0", "0"}, {
          "c12", "c11", "c12", "0", "0", "0"}, {
          "c12", "c12", "c11", "0", "0", "0"}, {"0", "0", "0", 
           FractionBox[
            RowBox[{"c11", "-", "c12"}], "2"], "0", "0"}, {"0", "0", "0", "0", 
           FractionBox[
            RowBox[{"c11", "-", "c12"}], "2"], "0"}, {"0", "0", "0", "0", "0", 
           FractionBox[
            RowBox[{"c11", "-", "c12"}], "2"]}}, RowSpacings -> 1, 
         ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
         Left], 
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$]]]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{{3.921119162722561*^9, 3.921119215565654*^9}, 
   3.9211192470894623`*^9, {3.9211282548227377`*^9, 3.9211282691461773`*^9}, 
   3.921154389844352*^9, 3.921174012532877*^9, 3.9217686735539303`*^9, {
   3.92176906339139*^9, 3.921769074716206*^9}},
 CellLabel->
  "Out[738]=",ExpressionUUID->"6b839798-f182-4501-99b4-9fc1faca29e7"]
}, Open  ]]
}, Open  ]],

Cell["Deriving the Christoffel equation", "Section",
 CellChangeTimes->{{3.9211184524650517`*^9, 3.9211184549104443`*^9}, {
  3.9211493437138653`*^9, 
  3.921149350812138*^9}},ExpressionUUID->"a9f64c6e-22bf-4a67-b549-\
dde34c2a0d29"],

Cell[CellGroupData[{

Cell["\<\
Example 1: verifying equivalence of Bond and Euler rotation matrices\
\>", "Section",
 CellChangeTimes->{{3.921118462988386*^9, 3.921118507521487*^9}, {
  3.921120283856493*^9, 3.921120289754532*^9}, {3.92112765041643*^9, 
  3.921127650619361*^9}},ExpressionUUID->"fe2dd573-8f37-4319-a4d4-\
1b8f0e21c513"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"symbol", " ", "=", "c"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"saContract", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"saCreateElasticityTensor", "[", 
          RowBox[{"symbol", "  ", ",", 
           RowBox[{
           "\"\<Symmetry\>\"", " ", "->", " ", "\"\<Monoclinic\>\""}]}], 
          "]"}], ",", 
         RowBox[{"saRotationTransformation", "[", 
          RowBox[{"\[Theta]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], "]"}], "//", 
       
       RowBox[{
        RowBox[{"saTensor2Voigt", "[", 
         RowBox[{"symbol", " ", ",", " ", "#"}], "]"}], "&"}]}], 
      "\[IndentingNewLine]", "//", 
      RowBox[{
       RowBox[{"saHumanReadable", "[", 
        RowBox[{"symbol", ",", " ", "#"}], "]"}], "&"}]}], 
     "\[IndentingNewLine]", "//", "FullSimplify"}], "\[IndentingNewLine]", "//",
     "TableForm"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9211196294088993`*^9, 3.921119630733045*^9}, {
  3.9211202220478077`*^9, 3.921120225456623*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"226f0714-d23d-4fd2-a156-a7d72a2d1fc8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"c11", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
      RowBox[{"2", " ", "c13", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c33", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "+", 
      RowBox[{"c55", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"c12", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c23", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      FractionBox["1", "8"], " ", 
      RowBox[{"(", 
       RowBox[{"c11", "+", 
        RowBox[{"6", " ", "c13"}], "+", "c33", "-", 
        RowBox[{"4", " ", "c55"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c16", "-", 
           RowBox[{"2", " ", "c54"}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"c63", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      RowBox[{"(", 
       RowBox[{"c11", "-", "c33", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
     RowBox[{
      RowBox[{"c16", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "c54"}], "+", "c63"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]},
    {
     RowBox[{
      RowBox[{"c12", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c23", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "c22", 
     RowBox[{
      RowBox[{"c23", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c12", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"-", "c62"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c12"}], "+", "c23"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{"c62", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
    {
     RowBox[{
      FractionBox["1", "8"], " ", 
      RowBox[{"(", 
       RowBox[{"c11", "+", 
        RowBox[{"6", " ", "c13"}], "+", "c33", "-", 
        RowBox[{"4", " ", "c55"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"c23", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c12", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"c33", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
      RowBox[{"2", " ", "c13", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c11", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"]}], "+", 
      RowBox[{"c55", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "c54"}], "+", "c63"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"c16", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c11"}], "+", "c33", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
     RowBox[{
      RowBox[{"c63", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c16", "-", 
         RowBox[{"2", " ", "c54"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c16", "-", 
           RowBox[{"2", " ", "c54"}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"c63", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "c62"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "c54"}], "+", "c63"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
        RowBox[{"c16", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"c44", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c66", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"c54", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c16"}], "+", "c54", "+", "c63"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c44", "-", "c66"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      RowBox[{"(", 
       RowBox[{"c11", "-", "c33", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c12"}], "+", "c23"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c11"}], "+", "c33", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
     RowBox[{
      RowBox[{"c54", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c16"}], "+", "c54", "+", "c63"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      FractionBox["1", "8"], " ", 
      RowBox[{"(", 
       RowBox[{"c11", "-", 
        RowBox[{"2", " ", "c13"}], "+", "c33", "+", 
        RowBox[{"4", " ", "c55"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c11", "-", 
           RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
           RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c16"}], "+", "c54", "+", "c63"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"c54", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}]}]},
    {
     RowBox[{
      RowBox[{"c16", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "c54"}], "+", "c63"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{"c62", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{"c63", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c16", "-", 
         RowBox[{"2", " ", "c54"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c44", "-", "c66"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "c16"}], "+", "c54", "+", "c63"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"c54", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "3"]}]}], 
     RowBox[{
      RowBox[{"c66", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"c44", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.921119618542103*^9, 3.9211196320512543`*^9}, 
   3.921154391495798*^9},
 CellLabel->
  "Out[3]//TableForm=",ExpressionUUID->"9a44bc20-059d-4e14-b9a4-bda77bde5d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"symbol", " ", "=", "a"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"saBondMatrix", "[", "symbol", "]"}], "\[IndentingNewLine]", "//", 
      RowBox[{
       RowBox[{"saHumanReadable", "[", 
        RowBox[{"symbol", ",", " ", "#"}], "]"}], "&"}]}], "//", 
     "FullSimplify"}], "//", "TableForm"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.921119701812152*^9, 3.921119825649284*^9}, {
  3.9211201798654537`*^9, 3.921120200072567*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bdf32ac4-6b1b-4181-9f36-26f7986ae9eb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     SuperscriptBox["a11", "2"], 
     SuperscriptBox["a12", "2"], 
     SuperscriptBox["a13", "2"], 
     RowBox[{"2", " ", "a12", " ", "a13"}], 
     RowBox[{"2", " ", "a11", " ", "a13"}], 
     RowBox[{"2", " ", "a11", " ", "a12"}]},
    {
     SuperscriptBox["a21", "2"], 
     SuperscriptBox["a22", "2"], 
     SuperscriptBox["a23", "2"], 
     RowBox[{"2", " ", "a22", " ", "a23"}], 
     RowBox[{"2", " ", "a21", " ", "a23"}], 
     RowBox[{"2", " ", "a21", " ", "a22"}]},
    {
     SuperscriptBox["a31", "2"], 
     SuperscriptBox["a32", "2"], 
     SuperscriptBox["a33", "2"], 
     RowBox[{"2", " ", "a32", " ", "a33"}], 
     RowBox[{"2", " ", "a31", " ", "a33"}], 
     RowBox[{"2", " ", "a31", " ", "a32"}]},
    {
     RowBox[{"a21", " ", "a31"}], 
     RowBox[{"a22", " ", "a32"}], 
     RowBox[{"a23", " ", "a33"}], 
     RowBox[{
      RowBox[{"a23", " ", "a32"}], "+", 
      RowBox[{"a22", " ", "a33"}]}], 
     RowBox[{
      RowBox[{"a23", " ", "a31"}], "+", 
      RowBox[{"a21", " ", "a33"}]}], 
     RowBox[{
      RowBox[{"a22", " ", "a31"}], "+", 
      RowBox[{"a21", " ", "a32"}]}]},
    {
     RowBox[{"a11", " ", "a31"}], 
     RowBox[{"a12", " ", "a32"}], 
     RowBox[{"a13", " ", "a33"}], 
     RowBox[{
      RowBox[{"a13", " ", "a32"}], "+", 
      RowBox[{"a12", " ", "a33"}]}], 
     RowBox[{
      RowBox[{"a13", " ", "a31"}], "+", 
      RowBox[{"a11", " ", "a33"}]}], 
     RowBox[{
      RowBox[{"a12", " ", "a31"}], "+", 
      RowBox[{"a11", " ", "a32"}]}]},
    {
     RowBox[{"a11", " ", "a21"}], 
     RowBox[{"a12", " ", "a22"}], 
     RowBox[{"a13", " ", "a23"}], 
     RowBox[{
      RowBox[{"a13", " ", "a22"}], "+", 
      RowBox[{"a12", " ", "a23"}]}], 
     RowBox[{
      RowBox[{"a13", " ", "a21"}], "+", 
      RowBox[{"a11", " ", "a23"}]}], 
     RowBox[{
      RowBox[{"a12", " ", "a21"}], "+", 
      RowBox[{"a11", " ", "a22"}]}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9211197107928257`*^9, 3.921119825993845*^9}, 
   3.921120195224971*^9, 3.921154393919248*^9},
 CellLabel->
  "Out[4]//TableForm=",ExpressionUUID->"cb30d2cf-4d18-4bda-8f40-5912995e76f8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 2: Phase velocities for VTI media", "Section",
 CellChangeTimes->{{3.921118509349888*^9, 3.9211185226216087`*^9}, {
  3.9211276532664957`*^9, 3.921127653511385*^9}, {3.9211493659333563`*^9, 
  3.9211493662794313`*^9}, {3.9211510110432453`*^9, 3.921151018460343*^9}, {
  3.9216593135722027`*^9, 
  3.9216593152363243`*^9}},ExpressionUUID->"d6aa2619-f26d-4b1b-9eec-\
d4a2cad61902"],

Cell[BoxData[
 RowBox[{"ClearAll", "@", "eq"}]], "Input",
 CellChangeTimes->{{3.921643802902375*^9, 3.9216438058885603`*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"af5b4cf3-7c39-40a5-9919-6c68a67cac14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"symbol", " ", "=", " ", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tens", "=", " ", 
        RowBox[{"saCreateElasticityTensor", "[", 
         RowBox[{"symbol", ",", 
          RowBox[{
          "\"\<Symmetry\>\"", " ", "->", " ", 
           "\"\<Transverse Isotropic\>\""}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"christ", " ", "=", 
          RowBox[{"saChristoffelMatrix", "[", 
           RowBox[{"tens", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0", ",", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], " ", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"repl", " ", "=", 
            RowBox[{
             RowBox[{"ToExpression", "[", " ", 
              RowBox[{
               RowBox[{"ToString", "[", "symbol", "]"}], "<>", "\"\<12\>\""}],
               "]"}], "->", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "symbol", "]"}], "<>", 
                "\"\<11\>\""}], "]"}], "-", 
              RowBox[{"ToExpression", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "symbol", "]"}], "<>", 
                "\"\<66\>\""}], "]"}]}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"christoffel", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"christ", "/.", 
                   RowBox[{"saVoigtReplacementRule", "[", "symbol", "]"}]}], 
                  ")"}], "-", 
                 RowBox[{"\[Rho]", " ", "V", " ", 
                  RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}], "//", 
               "Eigenvalues"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"vtiVelocities", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"saHumanReadable", "[", 
                RowBox[{"symbol", ",", " ", "christoffel"}], "]"}], "/.", 
               "repl"}], "//", "FullSimplify"}]}]}], "\[IndentingNewLine]", 
           "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.921149620201123*^9, 3.921149752384376*^9}, {
   3.92114979157979*^9, 3.921149826168251*^9}, {3.9211498839716787`*^9, 
   3.9211498861082973`*^9}, {3.921150196853138*^9, 3.921150254314816*^9}, {
   3.9211502984875174`*^9, 3.9211503034114103`*^9}, {3.9211504256837673`*^9, 
   3.9211505207521467`*^9}, {3.9211505527749977`*^9, 
   3.9211505717538347`*^9}, {3.9216386475858297`*^9, 3.92163865628193*^9}, {
   3.921639953843405*^9, 3.9216399708736887`*^9}, {3.921640157156314*^9, 
   3.921640160377186*^9}, {3.9216401912938023`*^9, 3.921640239240757*^9}, {
   3.921644210449497*^9, 3.921644210611987*^9}, {3.921644719934684*^9, 
   3.921644759970661*^9}, 3.921656467534396*^9, 3.921656538295422*^9, {
   3.921659485268104*^9, 3.921659711108534*^9}, {3.921662338253039*^9, 
   3.921662495740737*^9}},
 CellLabel->
  "In[739]:=",ExpressionUUID->"b1e2eda0-a7ab-405a-bdff-04c7941fd32a"],

Cell[CellGroupData[{

Cell[BoxData["vtiVelocities"], "Input",
 CellChangeTimes->{{3.9216623650175533`*^9, 3.9216623651094837`*^9}, {
  3.9216624340061283`*^9, 3.9216624354968987`*^9}},
 CellLabel->
  "In[740]:=",ExpressionUUID->"7de06a09-4a25-4c9f-83f4-34ed3fbf50cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "c55"}], "-", 
      RowBox[{"8", " ", "V", " ", "\[Rho]"}], "+", 
      RowBox[{"4", " ", "c33", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["c11", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c13", "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["c33", "2"]}], "-", 
          RowBox[{"4", " ", "c33", " ", "c55"}], "+", 
          RowBox[{"8", " ", "c55", " ", 
           RowBox[{"(", 
            RowBox[{"c13", "+", "c55"}], ")"}]}], "-", 
          RowBox[{"2", " ", "c11", " ", 
           RowBox[{"(", 
            RowBox[{"c33", "+", 
             RowBox[{"2", " ", "c55"}]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"c11", "-", "c33"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"c11", "+", "c33", "-", 
             RowBox[{"2", " ", "c55"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c11", "+", 
             RowBox[{"2", " ", "c13"}], "+", "c33"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"c11", "-", 
             RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
             RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], "+", 
      RowBox[{"4", " ", "c11", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "c55"}], "-", 
      RowBox[{"8", " ", "V", " ", "\[Rho]"}], "+", 
      RowBox[{"4", " ", "c33", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["c11", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["c13", "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["c33", "2"]}], "-", 
          RowBox[{"4", " ", "c33", " ", "c55"}], "+", 
          RowBox[{"8", " ", "c55", " ", 
           RowBox[{"(", 
            RowBox[{"c13", "+", "c55"}], ")"}]}], "-", 
          RowBox[{"2", " ", "c11", " ", 
           RowBox[{"(", 
            RowBox[{"c33", "+", 
             RowBox[{"2", " ", "c55"}]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"c11", "-", "c33"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"c11", "+", "c33", "-", 
             RowBox[{"2", " ", "c55"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c11", "+", 
             RowBox[{"2", " ", "c13"}], "+", "c33"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"c11", "-", 
             RowBox[{"2", " ", "c13"}], "+", "c33", "-", 
             RowBox[{"4", " ", "c55"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], "+", 
      RowBox[{"4", " ", "c11", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "V"}], " ", "\[Rho]"}], "+", 
    RowBox[{"c55", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "c66", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.921662446023651*^9, 3.921662500457385*^9, 
  3.921769121399974*^9},
 CellLabel->
  "Out[740]=",ExpressionUUID->"c5bfd702-7843-4c1d-ba23-deb40a79318e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saVariables", "[", 
  RowBox[{"c", ",", " ", "vtiVelocities"}], "]"}]], "Input",
 CellChangeTimes->{{3.921659866079533*^9, 3.921659874793556*^9}},
 CellLabel->
  "In[741]:=",ExpressionUUID->"17e8cccc-f1bc-4422-9c7f-62680bfe29f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c11", ",", "c13", ",", "c33", ",", "c55", ",", "c66"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9216598751799383`*^9, 3.921662420330504*^9, 
  3.9216625498073673`*^9, 3.9217691240950823`*^9},
 CellLabel->
  "Out[741]=",ExpressionUUID->"7a04307a-b0e0-4fee-9bf0-1903efe84447"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"thomsenParameters", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "==", 
      FractionBox[
       RowBox[{"c11", "-", "c33"}], 
       RowBox[{"2", " ", "c33"}]]}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "==", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "c55"}], "+", "c66"}], 
       RowBox[{"2", " ", "c55"}]]}], ",", " ", 
     RowBox[{"\[Beta]0", "==", 
      SqrtBox[
       FractionBox["c55", "\[Rho]"]]}], ",", " ", 
     RowBox[{"\[Alpha]0", " ", "==", " ", 
      SqrtBox[
       FractionBox["c33", "\[Rho]"]]}], ",", " ", 
     RowBox[{"\[Delta]", " ", "==", " ", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c13", " ", "+", "c55"}], ")"}], "^", "2"}], " ", "-", " ", 
        
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c33", " ", "-", " ", "c55"}], ")"}], "^", "2"}]}], 
       RowBox[{"2", "c33", 
        RowBox[{"(", 
         RowBox[{"c33", "-", "c55"}], ")"}]}]]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.921658924350193*^9},
 CellLabel->
  "In[742]:=",ExpressionUUID->"99aad106-bd55-46c8-a09b-9634fbcd74f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"variablesToEliminate", " ", "=", " ", 
     RowBox[{"saVariables", "[", 
      RowBox[{"c", ",", " ", "vtiVelocities"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"thomsenVelocities", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Eliminate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", "==", "0"}], "}"}], "~", "Join", "~", 
             "thomsenParameters"}], ",", "variablesToEliminate"}], "]"}], 
          "&"}], "/@", "vtiVelocities"}], "//", "FullSimplify"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"vtiSolutions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{"#", ",", "V"}], "]"}], "&"}], "/@", "thomsenVelocities"}],
         "//", "Flatten"}], "//", "DeleteDuplicates"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.921662592197013*^9, 3.921662595381091*^9}, {
   3.921662638023478*^9, 3.921662715756323*^9}, {3.9216627497001333`*^9, 
   3.9216627917079678`*^9}, 3.921662841561001*^9},
 CellLabel->
  "In[743]:=",ExpressionUUID->"3fe7c38e-d3a3-4241-99b2-6a7fa3cd9499"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"V", "\[Rule]", 
    RowBox[{
     FractionBox["1", "16"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox["\[Alpha]0", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Beta]0", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]"}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "8"}], " ", 
              SuperscriptBox["\[Alpha]0", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Beta]0", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "-", 
          RowBox[{"32", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Delta]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Delta]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Epsilon]"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Epsilon]"}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Delta]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Delta]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"V", "\[Rule]", 
    RowBox[{
     FractionBox["1", "16"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", 
        SuperscriptBox["\[Alpha]0", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Beta]0", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]"}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "8"}], " ", 
              SuperscriptBox["\[Alpha]0", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Beta]0", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], "2"], "-", 
          RowBox[{"32", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Delta]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Delta]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Epsilon]"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Epsilon]"}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Delta]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Delta]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "4"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]0", "2"], " ", 
              SuperscriptBox["\[Beta]0", "2"], " ", "\[Epsilon]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"V", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[Beta]0", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "+", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9216626839765377`*^9, 3.921662716405333*^9}, 
   3.921662750174012*^9, 3.9216627921414423`*^9, 3.921662843549015*^9, 
   3.9217691282068567`*^9},
 CellLabel->
  "Out[743]=",ExpressionUUID->"87589724-410f-408a-a223-05f419b1b67e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"expr", " ", "=", " ", 
      RowBox[{"V", "/.", 
       RowBox[{"vtiSolutions", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]0", ">", "0"}], ",", 
        RowBox[{"\[Beta]0", ">", "0"}], ",", 
        RowBox[{"\[Epsilon]", ">", "0"}], ",", " ", 
        RowBox[{"\[Delta]", ">", "0"}], ",", " ", 
        RowBox[{"\[Gamma]", ">", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "@", "expr"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Epsilon]", "->", 
               RowBox[{"t", " ", "\[Epsilon]"}]}], ",", " ", 
              RowBox[{"\[Delta]", "->", 
               RowBox[{"t", " ", "\[Delta]"}]}], ",", " ", 
              RowBox[{"\[Gamma]", "->", 
               RowBox[{"t", " ", "\[Gamma]"}]}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
         "Normal"}], "]"}], "/.", 
       RowBox[{"t", "->", "1"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.921643960108013*^9, 3.921644109317881*^9}, {
   3.921644168397403*^9, 3.921644186785583*^9}, {3.9216442269832993`*^9, 
   3.9216442695135117`*^9}, {3.921644307278595*^9, 3.921644309668906*^9}, {
   3.921644422238491*^9, 3.9216444836654663`*^9}, {3.9216445299134827`*^9, 
   3.9216445446389217`*^9}, {3.9216445853537817`*^9, 3.921644592583612*^9}, {
   3.921644785276174*^9, 3.92164481009096*^9}, {3.921645387256843*^9, 
   3.9216454127377443`*^9}, {3.921645454105179*^9, 3.9216454767270327`*^9}, 
   3.9216455430135098`*^9, {3.92164569692612*^9, 3.921645699321072*^9}, {
   3.921645732484976*^9, 3.921645750810136*^9}, {3.9216459209650593`*^9, 
   3.921645954441889*^9}, 3.9216459847129393`*^9, {3.9216460288356457`*^9, 
   3.9216460658357*^9}, {3.921646164767653*^9, 3.921646165828162*^9}, {
   3.921646256473003*^9, 3.921646268762473*^9}, {3.921646345577503*^9, 
   3.921646382946411*^9}, {3.921658640325429*^9, 3.92165864043886*^9}, {
   3.921659067089161*^9, 3.921659067271038*^9}, {3.921659276490724*^9, 
   3.921659286559347*^9}},
 CellLabel->
  "In[744]:=",ExpressionUUID->"445ff1f5-c013-4732-8e82-0fcce5a2a7a4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]0", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Alpha]0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Delta]"}], "+", "\[Epsilon]"}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Alpha]0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Delta]", "-", "\[Epsilon]"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], 
         RowBox[{"8", " ", "\[Beta]0"}]], 
        RowBox[{"\[Alpha]0", "\[GreaterEqual]", "\[Beta]0"}]},
       {
        RowBox[{
         FractionBox["1", "8"], " ", "\[Alpha]0", " ", 
         RowBox[{"(", 
          RowBox[{"8", "+", "\[Delta]", "+", 
           RowBox[{"3", " ", "\[Epsilon]"}], "-", 
           RowBox[{"4", " ", "\[Epsilon]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Delta]"}], "+", "\[Epsilon]"}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.921645388088578*^9, 3.921645413034832*^9}, {
   3.92164545447153*^9, 3.921645480079434*^9}, 3.921645543429576*^9, 
   3.921645669191332*^9, 3.921645699872332*^9, {3.921645733967998*^9, 
   3.921645756071693*^9}, {3.921645921285274*^9, 3.9216459549088078`*^9}, 
   3.921645989195323*^9, {3.921646040733316*^9, 3.921646066174594*^9}, {
   3.9216461157670193`*^9, 3.92164617270829*^9}, {3.9216462570633183`*^9, 
   3.921646273145762*^9}, {3.921646349721932*^9, 3.921646386382303*^9}, 
   3.921658953285717*^9, 3.921659018371216*^9, 3.9216590725633173`*^9, {
   3.921659277053678*^9, 3.9216592908856916`*^9}, 3.9216628519178762`*^9, 
   3.9217691337454453`*^9},
 CellLabel->
  "Out[744]=",ExpressionUUID->"3571cc4d-5d81-408e-8608-761cc3590951"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Example 3: Reflection coefficients for tilted anisotropic media\
\>", "Section",
 CellChangeTimes->{{3.9211185254291153`*^9, 3.921118571561625*^9}, {
   3.921127658240594*^9, 3.921127660299674*^9}, {3.9211493674601307`*^9, 
   3.921149369350618*^9}, 
   3.921151028409298*^9},ExpressionUUID->"8443ebf2-63c1-4fba-b883-\
03f08cab924a"],

Cell[CellGroupData[{

Cell["\<\
Application : first order expansions of phase velocities for media of \
orthorhombic anisotropy\
\>", "Section",
 CellChangeTimes->{{3.921769211977453*^9, 3.921769240952982*^9}, {
  3.921770335476262*^9, 
  3.921770338580924*^9}},ExpressionUUID->"10c3de14-861d-4149-bb07-\
e5665734bf0c"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"symbol", " ", "=", "c"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"iso", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"saCreateElasticityTensor", "[", 
            RowBox[{"symbol", "  ", ",", 
             RowBox[{
             "\"\<Symmetry\>\"", " ", "->", " ", "\"\<Isotropic\>\""}]}], 
            "]"}], "\[IndentingNewLine]", "//", 
           RowBox[{
            RowBox[{"saTensor2Voigt", "[", 
             RowBox[{"symbol", " ", ",", " ", "#"}], "]"}], "&"}]}], 
          "\[IndentingNewLine]", "//", 
          RowBox[{
           RowBox[{"saHumanReadable", "[", 
            RowBox[{"symbol", ",", " ", "#"}], "]"}], "&"}]}], 
         "\[IndentingNewLine]", "//", "FullSimplify"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ti", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"saCreateElasticityTensor", "[", 
            RowBox[{"symbol", "  ", ",", 
             RowBox[{
             "\"\<Symmetry\>\"", " ", "->", " ", "\"\<Orthotropic\>\""}]}], 
            "]"}], "\[IndentingNewLine]", "//", 
           RowBox[{
            RowBox[{"saTensor2Voigt", "[", 
             RowBox[{"symbol", " ", ",", " ", "#"}], "]"}], "&"}]}], 
          "\[IndentingNewLine]", "//", 
          RowBox[{
           RowBox[{"saHumanReadable", "[", 
            RowBox[{"symbol", ",", " ", "#"}], "]"}], "&"}]}], 
         "\[IndentingNewLine]", "//", "FullSimplify"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dif", " ", "=", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"iso", "-", "ti"}], 
          RowBox[{"iso", "+", "ti"}]], "//", "Quiet"}], "//", 
        "FullSimplify"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.921769426849513*^9, 3.921769464600697*^9}, {
  3.921769605255623*^9, 3.921769714296637*^9}, {3.9217699801317453`*^9, 
  3.921769984666171*^9}, {3.921770033311721*^9, 3.9217700367128267`*^9}, {
  3.92177007750692*^9, 3.921770137247116*^9}},
 CellLabel->
  "In[817]:=",ExpressionUUID->"c44e152b-b8cc-4dfe-837c-32b5b9ff4a3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Flatten", "@", "dif"}]}], ",", 
      RowBox[{"(", 
       RowBox[{"Except", "[", 
        RowBox[{"(", 
         RowBox[{"Indeterminate", "|", "0"}], ")"}], "]"}], ")"}]}], "]"}], 
    "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"c33", "/", "\[Rho]"}], "]"}], ",", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"c55", "/", "\[Rho]"}], "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9217692855688066`*^9, 3.921769285903908*^9}, {
   3.92176939831286*^9, 3.9217694027708273`*^9}, {3.921769474977949*^9, 
   3.92176960049482*^9}, {3.9217698506878357`*^9, 3.92176985430471*^9}, {
   3.921769995240212*^9, 3.9217699971817904`*^9}, 3.921770147115765*^9, {
   3.921770253789823*^9, 3.9217702782467527`*^9}},
 CellLabel->
  "In[822]:=",ExpressionUUID->"bc4db49d-5e34-49ff-8ceb-80dfe30825e2"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.921770292252722*^9, 
  3.921770296314148*^9}},ExpressionUUID->"23bac1e5-3f3d-47e8-af8d-\
78e2af4f5a0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     RowBox[{"2", " ", "c12"}], 
     RowBox[{"c12", "+", "c13"}]]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     RowBox[{"2", " ", "c11"}], 
     RowBox[{"c11", "+", "c22"}]]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     RowBox[{"2", " ", "c12"}], 
     RowBox[{"c12", "+", "c23"}]]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     RowBox[{"2", " ", "c11"}], 
     RowBox[{"c11", "+", "c33"}]]}], ",", 
   FractionBox[
    RowBox[{"c11", "-", "c12", "-", 
     RowBox[{"2", " ", "c44"}]}], 
    RowBox[{"c11", "-", "c12", "+", 
     RowBox[{"2", " ", "c44"}]}]], ",", 
   FractionBox[
    RowBox[{"c11", "-", "c12", "-", 
     RowBox[{"2", " ", "c55"}]}], 
    RowBox[{"c11", "-", "c12", "+", 
     RowBox[{"2", " ", "c55"}]}]], ",", 
   FractionBox[
    RowBox[{"c11", "-", "c12", "-", 
     RowBox[{"2", " ", "c66"}]}], 
    RowBox[{"c11", "-", "c12", "+", 
     RowBox[{"2", " ", "c66"}]}]], ",", 
   SqrtBox[
    FractionBox["c33", "\[Rho]"]], ",", 
   SqrtBox[
    FractionBox["c55", "\[Rho]"]]}], "}"}]], "Output",
 CellChangeTimes->{3.921770293036051*^9},
 CellLabel->
  "Out[823]=",ExpressionUUID->"5e779c0f-7e36-437e-9e20-7ce5c54accc7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"eqns", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"auxilliary", " ", "=", " ", 
      RowBox[{"Array", "[", 
       RowBox[{"aux", ",", 
        RowBox[{"Length", "@", "params"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Thread", "[", 
     RowBox[{"auxilliary", "==", "params"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.921770004977076*^9, 3.921770022079466*^9}, {
  3.921770385331346*^9, 3.9217704477229424`*^9}, {3.921770589449128*^9, 
  3.9217705905558357`*^9}},
 CellLabel->
  "In[838]:=",ExpressionUUID->"0f86aa21-0106-4960-8f98-90ee37feea8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"aux", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c12"}], 
      RowBox[{"c12", "+", "c13"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c11"}], 
      RowBox[{"c11", "+", "c22"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "3", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c12"}], 
      RowBox[{"c12", "+", "c23"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "4", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c11"}], 
      RowBox[{"c11", "+", "c33"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "5", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{"c11", "-", "c12", "-", 
      RowBox[{"2", " ", "c44"}]}], 
     RowBox[{"c11", "-", "c12", "+", 
      RowBox[{"2", " ", "c44"}]}]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "6", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{"c11", "-", "c12", "-", 
      RowBox[{"2", " ", "c55"}]}], 
     RowBox[{"c11", "-", "c12", "+", 
      RowBox[{"2", " ", "c55"}]}]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "7", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{"c11", "-", "c12", "-", 
      RowBox[{"2", " ", "c66"}]}], 
     RowBox[{"c11", "-", "c12", "+", 
      RowBox[{"2", " ", "c66"}]}]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "8", "]"}], "\[Equal]", 
    SqrtBox[
     FractionBox["c33", "\[Rho]"]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "9", "]"}], "\[Equal]", 
    SqrtBox[
     FractionBox["c55", "\[Rho]"]]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9217708313350887`*^9, 
  3.921770834870043*^9}},ExpressionUUID->"db3c446b-3e23-475c-a9ad-\
b58260fd2cbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "saTensor2Voigt"}]], "Input",
 CellChangeTimes->{{3.921770838803338*^9, 3.9217708399309063`*^9}},
 CellLabel->
  "In[858]:=",ExpressionUUID->"cf8a392d-ab35-41ca-84a4-607ff6e884b7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"saTensor2Voigt[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\)] converts a \
rank-4 symbolic elastic \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\) with \
entries \\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to the \
corresponding Voigt 6x6 matrix with entries \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"saTensor2Voigt", "[", 
                    
                    RowBox[{
                    "SymbolicAnisotropy`Private`symbol_", ",", 
                    "SymbolicAnisotropy`Private`tensor_"}], "]"}], "/;", 
                    RowBox[{
                    
                    RowBox[{
                    "Dimensions", "[", "SymbolicAnisotropy`Private`tensor", 
                    "]"}], "===", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}]}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", "=", 
                    "SymbolicAnisotropy`Private`voigtTable"}], ",", 
                    "SymbolicAnisotropy`Private`table"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"SymbolicAnisotropy`Private`table", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    
                    RowBox[{"SymbolicAnisotropy`Private`tensor", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"First", "[", 
                    RowBox[{"Position", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", ",", 
                    "SymbolicAnisotropy`Private`i"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"First", "[", 
                    RowBox[{"Position", "[", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`ip", ",", 
                    "SymbolicAnisotropy`Private`j"}], "]"}], "]"}]}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`i", ",", "6"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"SymbolicAnisotropy`Private`j", ",", "6"}], 
                    "}"}]}], "]"}]}], ";", 
                    
                    RowBox[{"SymbolicAnisotropy`Private`table", "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"saVoigtReplacementRule", "[", 
                    "SymbolicAnisotropy`Private`symbol", "]"}]}]}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"SymbolicAnisotropy`saTensor2Voigt\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"saTensor2Voigt[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\)] converts a \
rank-4 symbolic elastic \\!\\(\\*StyleBox[\\\"tensor\\\", \\\"TI\\\"]\\) with \
entries \\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to the \
corresponding Voigt 6x6 matrix with entries \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)[i,j]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "saTensor2Voigt[\!\(\*StyleBox[\"head\", \"TI\"]\), \
\!\(\*StyleBox[\"tensor\", \"TI\"]\)] converts a rank-4 symbolic elastic \!\(\
\*StyleBox[\"tensor\", \"TI\"]\) with entries \!\(\*StyleBox[\"head\", \
\"TI\"]\)[i,j,k,l] to the corresponding Voigt 6x6 matrix with entries \
\!\(\*StyleBox[\"head\", \"TI\"]\)[i,j]", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, SymbolicAnisotropy`saTensor2Voigt, {Condition[
         SymbolicAnisotropy`saTensor2Voigt[
          Pattern[SymbolicAnisotropy`Private`symbol, 
           Blank[]], 
          Pattern[SymbolicAnisotropy`Private`tensor, 
           Blank[]]], 
         Dimensions[SymbolicAnisotropy`Private`tensor] === {3, 3, 3, 3}] :> 
       Module[{SymbolicAnisotropy`Private`ip = 
          SymbolicAnisotropy`Private`voigtTable, 
          SymbolicAnisotropy`Private`table}, 
         SymbolicAnisotropy`Private`table = Table[
            Part[SymbolicAnisotropy`Private`tensor, 
             Apply[Sequence, 
              First[
               Position[
               SymbolicAnisotropy`Private`ip, SymbolicAnisotropy`Private`i]]], 
             Apply[Sequence, 
              First[
               Position[
               SymbolicAnisotropy`Private`ip, 
                SymbolicAnisotropy`Private`j]]]], {
            SymbolicAnisotropy`Private`i, 6}, {
            SymbolicAnisotropy`Private`j, 6}]; 
         ReplaceAll[SymbolicAnisotropy`Private`table, 
           SymbolicAnisotropy`saVoigtReplacementRule[
           SymbolicAnisotropy`Private`symbol]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "SymbolicAnisotropy`saTensor2Voigt"|>, False]]], "Output",
 CellChangeTimes->{3.921770840274413*^9},
 CellLabel->
  "Out[858]=",ExpressionUUID->"d05d5a1b-b289-43d8-8918-6988adb04a70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "saHumanReadable"}]], "Input",
 CellChangeTimes->{{3.921771008500477*^9, 3.9217710094699783`*^9}},
 CellLabel->
  "In[864]:=",ExpressionUUID->"cbf9e200-1c47-43c1-8e30-98f40038a90f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"saHumanReadable[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)] creates a rule to convert all matrix/tensor entries \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j] or \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to \\!\\(\\*StyleBox[\
\\\"headij\\\", \\\"TI\\\"]\\) or \\!\\(\\*StyleBox[\\\"headijkl\\\", \
\\\"TI\\\"]\\) respectively for ease of readability.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"saHumanReadable", "[", 
                    
                    RowBox[{
                    "SymbolicAnisotropy`Private`head_", ",", 
                    "SymbolicAnisotropy`Private`expression_"}], "]"}], ":=", 
                    
                    RowBox[{
                    "SymbolicAnisotropy`Private`expression", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    
                    RowBox[{
                    "SymbolicAnisotropy`Private`head", "[", 
                    "SymbolicAnisotropy`Private`a__", "]"}], "\[RuleDelayed]", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    
                    RowBox[{"ToString", "[", 
                    "SymbolicAnisotropy`Private`head", "]"}], "<>", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"{", "SymbolicAnisotropy`Private`a", "}"}]}]}], 
                    "]"}]}]}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "saHumanReadable", "[", 
                    "SymbolicAnisotropy`Private`head_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{
                    "SymbolicAnisotropy`Private`head", "[", 
                    "SymbolicAnisotropy`Private`a__", "]"}], "\[RuleDelayed]", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    
                    RowBox[{"ToString", "[", 
                    "SymbolicAnisotropy`Private`head", "]"}], "<>", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"{", "SymbolicAnisotropy`Private`a", "}"}]}]}], 
                    "]"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"SymbolicAnisotropy`saHumanReadable\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"saHumanReadable[\\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\)] creates a rule to convert all matrix/tensor entries \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j] or \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\)[i,j,k,l] to \\!\\(\\*StyleBox[\
\\\"headij\\\", \\\"TI\\\"]\\) or \\!\\(\\*StyleBox[\\\"headijkl\\\", \
\\\"TI\\\"]\\) respectively for ease of readability.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "saHumanReadable[\!\(\*StyleBox[\"head\", \"TI\"]\)] creates a rule to \
convert all matrix/tensor entries \!\(\*StyleBox[\"head\", \"TI\"]\)[i,j] or \
\!\(\*StyleBox[\"head\", \"TI\"]\)[i,j,k,l] to \!\(\*StyleBox[\"headij\", \
\"TI\"]\) or \!\(\*StyleBox[\"headijkl\", \"TI\"]\) respectively for ease of \
readability.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, SymbolicAnisotropy`saHumanReadable, {
      SymbolicAnisotropy`saHumanReadable[
         Pattern[SymbolicAnisotropy`Private`head, 
          Blank[]], 
         Pattern[SymbolicAnisotropy`Private`expression, 
          Blank[]]] :> 
       ReplaceAll[
        SymbolicAnisotropy`Private`expression, SymbolicAnisotropy`Private`head[
           Pattern[SymbolicAnisotropy`Private`a, 
            BlankSequence[]]] :> 
         ToExpression[
          ToString[SymbolicAnisotropy`Private`head] <> 
           Map[ToString, {SymbolicAnisotropy`Private`a}]]], 
       SymbolicAnisotropy`saHumanReadable[
         Pattern[SymbolicAnisotropy`Private`head, 
          Blank[]]] :> (SymbolicAnisotropy`Private`head[
          Pattern[SymbolicAnisotropy`Private`a, 
           BlankSequence[]]] :> 
        ToExpression[
         ToString[SymbolicAnisotropy`Private`head] <> 
          Map[ToString, {SymbolicAnisotropy`Private`a}]])}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "SymbolicAnisotropy`saHumanReadable"|>, False]]], "Output",
 CellChangeTimes->{3.921771009783855*^9},
 CellLabel->
  "Out[864]=",ExpressionUUID->"48577c40-b5ab-4f39-bd80-e95558c33b2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saHumanReadable", "[", "c", "]"}]], "Input",
 CellChangeTimes->{3.9217710762259398`*^9},
 CellLabel->
  "In[877]:=",ExpressionUUID->"5a4a847d-cf24-475d-a3fb-420d1e3291fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", "a$__", "]"}], "\[RuleDelayed]", 
  RowBox[{"ToExpression", "[", 
   RowBox[{
    RowBox[{"ToString", "[", "c", "]"}], "<>", 
    RowBox[{"ToString", "/@", 
     RowBox[{"{", "a$", "}"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.921771076613059*^9, 3.92177119512988*^9},
 CellLabel->
  "Out[877]=",ExpressionUUID->"6155ca33-4a3e-457e-9895-1a57f0c4c63b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"1", ",", "2"}], "]"}], "/.", 
  RowBox[{"saHumanReadable", "[", "c", "]"}]}]], "Input",
 CellChangeTimes->{{3.921771232032483*^9, 3.921771243280469*^9}},
 CellLabel->
  "In[879]:=",ExpressionUUID->"24c96de7-b61f-4443-8525-ca6d991c6a42"],

Cell[BoxData["c12"], "Output",
 CellChangeTimes->{
  3.921771190767153*^9, {3.92177123248378*^9, 3.921771243726408*^9}},
 CellLabel->
  "Out[879]=",ExpressionUUID->"398b62a5-85a9-47d1-9496-c3e39aa595f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"symbol", " ", "=", " ", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tens", " ", "=", " ", 
          RowBox[{"saCreateElasticityTensor", "[", 
           RowBox[{"symbol", ",", 
            RowBox[{
            "\"\<Symmetry\>\"", " ", "->", " ", "\"\<Orthotropic\>\""}]}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"tens", "//", 
         RowBox[{
          RowBox[{"saTensor2Voigt", "[", 
           RowBox[{"symbol", " ", ",", "#"}], "]"}], "&"}]}]}], 
       "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{"saHumanReadable", "[", "symbol", "]"}]}], "//", " ", 
     RowBox[{
      RowBox[{"saVariables", "[", 
       RowBox[{"c", ",", " ", "#"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.92177076449*^9, 3.921770829775119*^9}, {
  3.9217709315173388`*^9, 3.921771090535194*^9}, {3.921771142032531*^9, 
  3.9217711422586527`*^9}, {3.9217712508786697`*^9, 3.9217712699365892`*^9}, {
  3.921771580272626*^9, 3.921771586606073*^9}},
 CellLabel->
  "In[893]:=",ExpressionUUID->"0f53649f-a891-4593-ba27-4a85d46f0949"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "c11", ",", "c12", ",", "c13", ",", "c22", ",", "c23", ",", "c33", ",", 
   "c44", ",", "c55", ",", "c66"}], "}"}]], "Output",
 CellChangeTimes->{{3.921770931797768*^9, 3.921770948318535*^9}, {
  3.921770980835099*^9, 3.9217710908650084`*^9}, {3.92177113976252*^9, 
  3.921771142657442*^9}, {3.921771251368289*^9, 3.9217712703049717`*^9}, {
  3.921771584855772*^9, 3.921771587083169*^9}},
 CellLabel->
  "Out[893]=",ExpressionUUID->"d49ab406-5074-4663-bddf-d204753d8353"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"symbol", " ", "=", " ", "c"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tens", "=", " ", 
       RowBox[{"saCreateElasticityTensor", "[", 
        RowBox[{"symbol", ",", 
         RowBox[{
         "\"\<Symmetry\>\"", " ", "->", " ", "\"\<Orthotropic\>\""}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"christ", " ", "=", 
         RowBox[{"saChristoffelMatrix", "[", 
          RowBox[{"tens", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], " ", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"christoffel", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"christ", "/.", 
                  RowBox[{"saVoigtReplacementRule", "[", "symbol", "]"}]}], 
                 ")"}], "-", 
                RowBox[{"\[Rho]", " ", "V", " ", 
                 RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}], "/.", 
              RowBox[{"saHumanReadable", "[", "symbol", "]"}]}], "//", 
             "FullSimplify"}], "//", "Eigenvalues"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ortVelocities", " ", "=", " ", 
          RowBox[{"christoffel", "//", "Simplify"}]}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"ortVelocities", " ", "=", " ", 
          RowBox[{
           RowBox[{"saHumanReadable", "[", 
            RowBox[{"symbol", ",", " ", "christoffel"}], "]"}], "//", 
           "FullSimplify"}]}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.92177047575099*^9, 3.9217704785308523`*^9}, {
  3.921770516453471*^9, 3.921770526677327*^9}, {3.921770571989283*^9, 
  3.921770572514018*^9}, {3.9217706577292013`*^9, 3.921770665710415*^9}, {
  3.921770714748001*^9, 3.921770749707315*^9}, {3.92177129128942*^9, 
  3.921771336860887*^9}, {3.921771378693803*^9, 3.921771387598468*^9}, {
  3.921771514846583*^9, 3.9217715153470783`*^9}, {3.921771733491621*^9, 
  3.921771745445566*^9}, {3.9217717792095747`*^9, 3.9217717799785767`*^9}, {
  3.921772155017248*^9, 3.921772172221266*^9}},
 CellLabel->
  "In[903]:=",ExpressionUUID->"406088f8-1c49-4202-8124-d895f60063e6"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"16", " ", 
                   SuperscriptBox["c13", "2"], " ", "c22"}], "-", 
                 RowBox[{"32", " ", "c12", " ", "c13", " ", "c23"}], "+", 
                 TemplateBox[{"1234"}, "OutputSizeLimit`Skeleton"], "+", 
                 RowBox[{"2048", " ", 
                   SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}], 
         ",", 
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"16", " ", 
                   SuperscriptBox["c13", "2"], " ", "c22"}], "-", 
                 RowBox[{"32", " ", "c12", " ", "c13", " ", "c23"}], "+", 
                 TemplateBox[{"1234"}, "OutputSizeLimit`Skeleton"], "+", 
                 RowBox[{"2048", " ", 
                   SuperscriptBox["#1", "3"]}]}], "&"}], ",", "2"}], "]"}], 
         ",", 
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"16", " ", 
                   SuperscriptBox["c13", "2"], " ", "c22"}], "-", 
                 RowBox[{"32", " ", "c12", " ", "c13", " ", "c23"}], "+", 
                 TemplateBox[{"1234"}, "OutputSizeLimit`Skeleton"], "+", 
                 RowBox[{"2048", " ", 
                   SuperscriptBox["#1", "3"]}]}], "&"}], ",", "3"}], "]"}]}], 
       "}"}], Short[#, 8]& ], "line" -> 903, "sessionID" -> 
   34237069237533002701, "byteCount" -> 916264, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.921771305187756*^9, 3.9217713402936907`*^9}, {
  3.9217715128334627`*^9, 3.921771517377708*^9}, {3.921771740447925*^9, 
  3.9217717494162073`*^9}, {3.921772152901409*^9, 3.921772175207765*^9}},
 CellLabel->
  "Out[903]=",ExpressionUUID->"64cae60b-18e6-41a2-9c27-e94e4d066c4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vars", " ", "=", "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"symbol", " ", "=", " ", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tens", " ", "=", " ", 
          RowBox[{"saCreateElasticityTensor", "[", 
           RowBox[{"symbol", ",", 
            RowBox[{
            "\"\<Symmetry\>\"", " ", "->", " ", "\"\<Orthotropic\>\""}]}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"tens", "//", 
         RowBox[{
          RowBox[{"saTensor2Voigt", "[", 
           RowBox[{"symbol", " ", ",", "#"}], "]"}], "&"}]}]}], 
       "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{"saHumanReadable", "[", "symbol", "]"}]}], "//", " ", 
     RowBox[{
      RowBox[{"saVariables", "[", 
       RowBox[{"c", ",", " ", "#"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.921771605110354*^9, 3.921771605881068*^9}},
 CellLabel->
  "In[904]:=",ExpressionUUID->"e4b21368-323a-4a86-bf05-e265647da461"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "c11", ",", "c12", ",", "c13", ",", "c22", ",", "c23", ",", "c33", ",", 
   "c44", ",", "c55", ",", "c66"}], "}"}]], "Output",
 CellChangeTimes->{3.9217716062317457`*^9, 3.921772296441411*^9},
 CellLabel->
  "Out[904]=",ExpressionUUID->"0b83aa25-76b1-489f-afb5-ca962a8435e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eqns"], "Input",
 CellChangeTimes->{{3.9217725392761097`*^9, 3.921772540318112*^9}},
 CellLabel->
  "In[906]:=",ExpressionUUID->"08826e00-ab5b-44bc-8447-3d7b255758d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"aux", "[", "1", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c12"}], 
      RowBox[{"c12", "+", "c13"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "2", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c11"}], 
      RowBox[{"c11", "+", "c22"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "3", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c12"}], 
      RowBox[{"c12", "+", "c23"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "4", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"2", " ", "c11"}], 
      RowBox[{"c11", "+", "c33"}]]}]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "5", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{"c11", "-", "c12", "-", 
      RowBox[{"2", " ", "c44"}]}], 
     RowBox[{"c11", "-", "c12", "+", 
      RowBox[{"2", " ", "c44"}]}]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "6", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{"c11", "-", "c12", "-", 
      RowBox[{"2", " ", "c55"}]}], 
     RowBox[{"c11", "-", "c12", "+", 
      RowBox[{"2", " ", "c55"}]}]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "7", "]"}], "\[Equal]", 
    FractionBox[
     RowBox[{"c11", "-", "c12", "-", 
      RowBox[{"2", " ", "c66"}]}], 
     RowBox[{"c11", "-", "c12", "+", 
      RowBox[{"2", " ", "c66"}]}]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "8", "]"}], "\[Equal]", 
    SqrtBox[
     FractionBox["c33", "\[Rho]"]]}], ",", 
   RowBox[{
    RowBox[{"aux", "[", "9", "]"}], "\[Equal]", 
    SqrtBox[
     FractionBox["c55", "\[Rho]"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9217725405039787`*^9},
 CellLabel->
  "Out[906]=",ExpressionUUID->"60619e65-57f5-4329-85de-81e739c22523"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"variablesToEliminate", " ", "=", " ", "vars"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"thomsenVelocities", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Eliminate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", "==", "0"}], "}"}], "~", "Join", "~", "eqns"}], 
            ",", "variablesToEliminate"}], "]"}], "&"}], "/@", 
         "ortVelocities"}], "//", "Simplify"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"ortSolutions", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{"#", ",", "V"}], "]"}], "&"}], "/@", 
          "thomsenVelocities"}], "//", "Flatten"}], "//", 
        "DeleteDuplicates"}]}], "*)"}], "\[IndentingNewLine]", 
     "thomsenVelocities"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.921770599342568*^9, 3.9217706014062777`*^9}, {
  3.921771598196321*^9, 3.921771630573036*^9}, {3.921772577063388*^9, 
  3.921772589718954*^9}},
 CellLabel->
  "In[907]:=",ExpressionUUID->"d0d72dda-baf7-4611-8650-8f666abf0c9b"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.921770579832302*^9, {3.921770623487764*^9, 3.9217706295791616`*^9}, 
   3.921771355519308*^9, {3.921771619870777*^9, 3.921771628481881*^9}, 
   3.921771735970543*^9, 3.921771781963778*^9, 3.92177253681444*^9, 
   3.921774122502536*^9},
 CellLabel->
  "Out[907]=",ExpressionUUID->"34bd546a-f827-44a6-afd4-66eb2db40623"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1175, 816},
WindowMargins->{{Automatic, 72}, {Automatic, 0}},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a46a64ea-eccd-4820-b9fb-2ab94d52928e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 176, 3, 123, "Title",ExpressionUUID->"ea21156d-136a-4dba-a83b-82b2ce7ab8dc"],
Cell[759, 27, 201, 3, 67, "Subtitle",ExpressionUUID->"5f645825-97ca-446f-910b-5be9fcd8ae85"],
Cell[CellGroupData[{
Cell[985, 34, 286, 4, 84, "Section",ExpressionUUID->"373c58a1-39bf-4376-8d8d-c9311f7a7c2b"],
Cell[1274, 40, 430, 8, 37, "Input",ExpressionUUID->"d1537a4b-7150-422e-ab43-1a820a56bf63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1741, 53, 160, 3, 84, "Section",ExpressionUUID->"a619bf9b-bb6e-4898-a192-35784e7c09ea"],
Cell[CellGroupData[{
Cell[1926, 60, 211, 4, 37, "Input",ExpressionUUID->"9540ed05-dad3-42a6-a87d-f6af858d8099"],
Cell[2140, 66, 719, 13, 95, "Output",ExpressionUUID->"e92fa8f3-66f1-44d1-84f2-09e86f858c2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2896, 84, 614, 17, 37, "Input",ExpressionUUID->"172a3316-c6f3-436f-bc8a-6ddb71a10a5b"],
Cell[3513, 103, 196558, 3801, 2857, "Output",ExpressionUUID->"4fb3d593-a210-4988-9a45-c178fd3d743f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200108, 3909, 189, 3, 37, "Input",ExpressionUUID->"1f9d8450-3807-411f-af4a-19c3923e6aab"],
Cell[200300, 3914, 20916, 393, 697, "Output",ExpressionUUID->"e4dfa91b-9800-42ac-8ce7-8ac0bd02ee03"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221265, 4313, 180, 3, 84, "Section",ExpressionUUID->"6c1e6453-e2de-4b2d-932f-e9b0cb490d5e"],
Cell[CellGroupData[{
Cell[221470, 4320, 2057, 50, 246, "Input",ExpressionUUID->"8a57b582-7ff5-4e76-82f1-5c51309a3183"],
Cell[223530, 4372, 4636, 100, 956, "Output",ExpressionUUID->"6b839798-f182-4501-99b4-9fc1faca29e7"]
}, Open  ]]
}, Open  ]],
Cell[228193, 4476, 233, 4, 84, "Section",ExpressionUUID->"a9f64c6e-22bf-4a67-b549-dde34c2a0d29"],
Cell[CellGroupData[{
Cell[228451, 4484, 315, 6, 65, "Section",ExpressionUUID->"fe2dd573-8f37-4319-a4d4-1b8f0e21c513"],
Cell[CellGroupData[{
Cell[228791, 4494, 1270, 32, 194, "Input",ExpressionUUID->"226f0714-d23d-4fd2-a156-a7d72a2d1fc8"],
Cell[230064, 4528, 12484, 367, 209, "Output",ExpressionUUID->"9a44bc20-059d-4e14-b9a4-bda77bde5d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242585, 4900, 616, 15, 64, "Input",ExpressionUUID->"bdf32ac4-6b1b-4181-9f36-26f7986ae9eb"],
Cell[243204, 4917, 2508, 76, 179, "Output",ExpressionUUID->"cb30d2cf-4d18-4bda-8f40-5912995e76f8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245761, 4999, 393, 6, 84, "Section",ExpressionUUID->"d6aa2619-f26d-4b1b-9eec-d4a2cad61902"],
Cell[246157, 5007, 208, 4, 37, "Input",ExpressionUUID->"af5b4cf3-7c39-40a5-9919-6c68a67cac14"],
Cell[246368, 5013, 3628, 83, 376, "Input",ExpressionUUID->"b1e2eda0-a7ab-405a-bdff-04c7941fd32a"],
Cell[CellGroupData[{
Cell[250021, 5100, 245, 4, 37, "Input",ExpressionUUID->"7de06a09-4a25-4c9f-83f4-34ed3fbf50cf"],
Cell[250269, 5106, 4212, 114, 250, "Output",ExpressionUUID->"c5bfd702-7843-4c1d-ba23-deb40a79318e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254518, 5225, 253, 5, 37, "Input",ExpressionUUID->"17e8cccc-f1bc-4422-9c7f-62680bfe29f1"],
Cell[254774, 5232, 316, 7, 42, "Output",ExpressionUUID->"7a04307a-b0e0-4fee-9bf0-1903efe84447"]
}, Open  ]],
Cell[255105, 5242, 1184, 35, 128, "Input",ExpressionUUID->"99aad106-bd55-46c8-a09b-9634fbcd74f8"],
Cell[CellGroupData[{
Cell[256314, 5281, 1387, 36, 194, "Input",ExpressionUUID->"3fe7c38e-d3a3-4241-99b2-6a7fa3cd9499"],
Cell[257704, 5319, 7114, 166, 250, "Output",ExpressionUUID->"87589724-410f-408a-a223-05f419b1b67e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264855, 5490, 2573, 54, 142, "Input",ExpressionUUID->"445ff1f5-c013-4732-8e82-0fcce5a2a7a4"],
Cell[267431, 5546, 3156, 79, 87, "Output",ExpressionUUID->"3571cc4d-5d81-408e-8608-761cc3590951"]
}, Open  ]]
}, Open  ]],
Cell[270614, 5629, 343, 7, 84, "Section",ExpressionUUID->"8443ebf2-63c1-4fba-b883-03f08cab924a"],
Cell[CellGroupData[{
Cell[270982, 5640, 297, 7, 113, "Section",ExpressionUUID->"10c3de14-861d-4149-bb07-e5665734bf0c"],
Cell[271282, 5649, 2361, 59, 411, "Input",ExpressionUUID->"c44e152b-b8cc-4dfe-837c-32b5b9ff4a3a"],
Cell[273646, 5710, 1018, 25, 65, "Input",ExpressionUUID->"bc4db49d-5e34-49ff-8ceb-80dfe30825e2"],
Cell[CellGroupData[{
Cell[274689, 5739, 152, 3, 37, "Input",ExpressionUUID->"23bac1e5-3f3d-47e8-af8d-78e2af4f5a0a"],
Cell[274844, 5744, 1322, 44, 120, "Output",ExpressionUUID->"5e779c0f-7e36-437e-9e20-7ce5c54accc7"]
}, Open  ]],
Cell[276181, 5791, 647, 16, 64, "Input",ExpressionUUID->"0f86aa21-0106-4960-8f98-90ee37feea8f"],
Cell[276831, 5809, 1930, 62, 195, "Input",ExpressionUUID->"db3c446b-3e23-475c-a9ad-b58260fd2cbe"],
Cell[CellGroupData[{
Cell[278786, 5875, 208, 4, 37, "Input",ExpressionUUID->"cf8a392d-ab35-41ca-84a4-607ff6e884b7"],
Cell[278997, 5881, 14112, 335, 148, "Output",ExpressionUUID->"d05d5a1b-b289-43d8-8918-6988adb04a70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293146, 6221, 209, 4, 37, "Input",ExpressionUUID->"cbf9e200-1c47-43c1-8e30-98f40038a90f"],
Cell[293358, 6227, 13160, 317, 148, "Output",ExpressionUUID->"48577c40-b5ab-4f39-bd80-e95558c33b2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306555, 6549, 195, 4, 37, "Input",ExpressionUUID->"5a4a847d-cf24-475d-a3fb-420d1e3291fc"],
Cell[306753, 6555, 401, 10, 45, "Output",ExpressionUUID->"6155ca33-4a3e-457e-9895-1a57f0c4c63b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307191, 6570, 293, 7, 37, "Input",ExpressionUUID->"24c96de7-b61f-4443-8525-ca6d991c6a42"],
Cell[307487, 6579, 203, 4, 42, "Output",ExpressionUUID->"398b62a5-85a9-47d1-9496-c3e39aa595f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307727, 6588, 1307, 33, 142, "Input",ExpressionUUID->"0f53649f-a891-4593-ba27-4a85d46f0949"],
Cell[309037, 6623, 513, 10, 42, "Output",ExpressionUUID->"d49ab406-5074-4663-bddf-d204753d8353"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309587, 6638, 2959, 68, 350, "Input",ExpressionUUID->"406088f8-1c49-4202-8124-d895f60063e6"],
Cell[312549, 6708, 2093, 45, 123, "Output",ExpressionUUID->"64cae60b-18e6-41a2-9c27-e94e4d066c4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314679, 6758, 1129, 30, 142, "Input",ExpressionUUID->"e4b21368-323a-4a86-bf05-e265647da461"],
Cell[315811, 6790, 317, 7, 42, "Output",ExpressionUUID->"0b83aa25-76b1-489f-afb5-ca962a8435e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316165, 6802, 181, 3, 37, "Input",ExpressionUUID->"08826e00-ab5b-44bc-8447-3d7b255758d2"],
Cell[316349, 6807, 1930, 62, 167, "Output",ExpressionUUID->"60619e65-57f5-4329-85de-81e739c22523"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318316, 6874, 1354, 37, 194, "Input",ExpressionUUID->"d0d72dda-baf7-4611-8650-8f666abf0c9b"],
Cell[319673, 6913, 378, 7, 42, "Output",ExpressionUUID->"34bd546a-f827-44a6-afd4-66eb2db40623"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

